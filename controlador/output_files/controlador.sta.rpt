TimeQuest Timing Analyzer report for controlador
Fri May 07 13:00:58 2021
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'out_comparador[0]'
 12. Slow Model Setup: 'state.initial'
 13. Slow Model Setup: 'state.MOV'
 14. Slow Model Setup: 'clk'
 15. Slow Model Setup: 'state.add'
 16. Slow Model Hold: 'out_comparador[0]'
 17. Slow Model Hold: 'state.initial'
 18. Slow Model Hold: 'state.add'
 19. Slow Model Hold: 'state.MOV'
 20. Slow Model Hold: 'clk'
 21. Slow Model Minimum Pulse Width: 'clk'
 22. Slow Model Minimum Pulse Width: 'out_comparador[0]'
 23. Slow Model Minimum Pulse Width: 'state.MOV'
 24. Slow Model Minimum Pulse Width: 'state.add'
 25. Slow Model Minimum Pulse Width: 'state.initial'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Fast Model Setup Summary
 31. Fast Model Hold Summary
 32. Fast Model Recovery Summary
 33. Fast Model Removal Summary
 34. Fast Model Minimum Pulse Width Summary
 35. Fast Model Setup: 'out_comparador[0]'
 36. Fast Model Setup: 'state.initial'
 37. Fast Model Setup: 'state.MOV'
 38. Fast Model Setup: 'state.add'
 39. Fast Model Setup: 'clk'
 40. Fast Model Hold: 'out_comparador[0]'
 41. Fast Model Hold: 'state.initial'
 42. Fast Model Hold: 'state.add'
 43. Fast Model Hold: 'clk'
 44. Fast Model Hold: 'state.MOV'
 45. Fast Model Minimum Pulse Width: 'clk'
 46. Fast Model Minimum Pulse Width: 'out_comparador[0]'
 47. Fast Model Minimum Pulse Width: 'state.MOV'
 48. Fast Model Minimum Pulse Width: 'state.add'
 49. Fast Model Minimum Pulse Width: 'state.initial'
 50. Setup Times
 51. Hold Times
 52. Clock to Output Times
 53. Minimum Clock to Output Times
 54. Multicorner Timing Analysis Summary
 55. Setup Times
 56. Hold Times
 57. Clock to Output Times
 58. Minimum Clock to Output Times
 59. Setup Transfers
 60. Hold Transfers
 61. Report TCCS
 62. Report RSKM
 63. Unconstrained Paths
 64. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; controlador                                                       ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C5AF256A7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                               ;
+-------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------+
; Clock Name        ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets               ;
+-------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------+
; clk               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }               ;
; out_comparador[0] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { out_comparador[0] } ;
; state.add         ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { state.add }         ;
; state.initial     ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { state.initial }     ;
; state.MOV         ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { state.MOV }         ;
+-------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------------------+


+------------------------------------------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                                                          ;
+------------+-----------------+-------------------+---------------------------------------------------------------+
; Fmax       ; Restricted Fmax ; Clock Name        ; Note                                                          ;
+------------+-----------------+-------------------+---------------------------------------------------------------+
; INF MHz    ; 145.77 MHz      ; state.add         ; limit due to hold check                                       ;
; 392.77 MHz ; 392.77 MHz      ; out_comparador[0] ;                                                               ;
; 431.41 MHz ; 380.08 MHz      ; clk               ; limit due to minimum period restriction (max I/O toggle rate) ;
; 1084.6 MHz ; 120.08 MHz      ; state.initial     ; limit due to hold check                                       ;
+------------+-----------------+-------------------+---------------------------------------------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------------------+
; Slow Model Setup Summary                   ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; out_comparador[0] ; -3.993 ; -30.969       ;
; state.initial     ; -3.407 ; -20.596       ;
; state.MOV         ; -2.277 ; -16.559       ;
; clk               ; -1.318 ; -18.875       ;
; state.add         ; -0.455 ; -1.093        ;
+-------------------+--------+---------------+


+--------------------------------------------+
; Slow Model Hold Summary                    ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; out_comparador[0] ; -5.564 ; -45.926       ;
; state.initial     ; -4.164 ; -26.982       ;
; state.add         ; -3.430 ; -5.545        ;
; state.MOV         ; -1.673 ; -8.284        ;
; clk               ; -1.529 ; -1.529        ;
+-------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------+
; Slow Model Minimum Pulse Width Summary     ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; clk               ; -1.631 ; -27.293       ;
; out_comparador[0] ; -1.469 ; -1.469        ;
; state.MOV         ; 0.500  ; 0.000         ;
; state.add         ; 0.500  ; 0.000         ;
; state.initial     ; 0.500  ; 0.000         ;
+-------------------+--------+---------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'out_comparador[0]'                                                                                     ;
+--------+-------------------+-------------+-------------------+-------------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node     ; Launch Clock      ; Latch Clock       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------+-------------------+-------------------+--------------+------------+------------+
; -3.993 ; state.ret         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.071      ; 4.818      ;
; -3.860 ; state.jma         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.071      ; 4.685      ;
; -3.794 ; state.mbh         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.708      ;
; -3.774 ; state.sw          ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.204      ; 4.732      ;
; -3.766 ; state.lw          ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.204      ; 4.724      ;
; -3.759 ; state.ret         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.951      ;
; -3.691 ; state.decodificar ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.151      ; 4.596      ;
; -3.657 ; state.mbl         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.571      ;
; -3.648 ; state.MOVS        ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.071      ; 4.473      ;
; -3.626 ; state.jma         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.818      ;
; -3.572 ; state.mbh         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.853      ;
; -3.544 ; state.lw          ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.866      ; 4.869      ;
; -3.540 ; state.sw          ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.866      ; 4.865      ;
; -3.504 ; state.ret         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.886      ; 4.704      ;
; -3.457 ; state.decodificar ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.813      ; 4.729      ;
; -3.436 ; state.jz          ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.350      ;
; -3.435 ; state.mbl         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.716      ;
; -3.414 ; state.MOVS        ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.606      ;
; -3.407 ; state.jme         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.321      ;
; -3.395 ; state.ret         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.597      ;
; -3.371 ; state.jma         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.886      ; 4.571      ;
; -3.365 ; state.ret         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.163      ; 4.958      ;
; -3.347 ; state.ret         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.941      ;
; -3.335 ; state.ret         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.929      ;
; -3.317 ; state.mbh         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 4.606      ;
; -3.303 ; state.busca       ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.217      ;
; -3.289 ; state.lw          ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 2.019      ; 4.622      ;
; -3.285 ; state.sw          ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 2.019      ; 4.618      ;
; -3.262 ; state.jma         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.464      ;
; -3.240 ; state.sltu        ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.151      ; 4.145      ;
; -3.232 ; state.jma         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.163      ; 4.825      ;
; -3.214 ; state.jma         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.808      ;
; -3.202 ; state.jz          ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.483      ;
; -3.202 ; state.decodificar ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.966      ; 4.482      ;
; -3.202 ; state.jma         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.796      ;
; -3.196 ; state.mbh         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.487      ;
; -3.180 ; state.mbl         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 4.469      ;
; -3.176 ; state.sw          ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.866      ; 4.511      ;
; -3.173 ; state.jme         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.454      ;
; -3.168 ; state.lw          ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.866      ; 4.503      ;
; -3.166 ; state.mbh         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.848      ;
; -3.160 ; state.mbh         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.843      ;
; -3.159 ; state.MOVS        ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.886      ; 4.359      ;
; -3.148 ; state.mbh         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.831      ;
; -3.146 ; state.sw          ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.296      ; 4.872      ;
; -3.138 ; state.lw          ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.296      ; 4.864      ;
; -3.132 ; state.lw          ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.297      ; 4.859      ;
; -3.128 ; state.sw          ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.297      ; 4.855      ;
; -3.120 ; state.lw          ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.297      ; 4.847      ;
; -3.116 ; state.sw          ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.297      ; 4.843      ;
; -3.111 ; state.nop         ; bau[1]      ; clk               ; out_comparador[0] ; 0.500        ; 2.160      ; 4.025      ;
; -3.093 ; state.decodificar ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.813      ; 4.375      ;
; -3.069 ; state.busca       ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.350      ;
; -3.063 ; state.decodificar ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.243      ; 4.736      ;
; -3.059 ; state.mbl         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.350      ;
; -3.050 ; state.MOVS        ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.733      ; 4.252      ;
; -3.045 ; state.decodificar ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.244      ; 4.719      ;
; -3.033 ; state.decodificar ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.244      ; 4.707      ;
; -3.029 ; state.mbl         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.711      ;
; -3.025 ; state.sltu        ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.813      ; 4.297      ;
; -3.023 ; state.mbl         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.706      ;
; -3.020 ; state.MOVS        ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.163      ; 4.613      ;
; -3.011 ; state.mbl         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.694      ;
; -3.002 ; state.MOVS        ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.596      ;
; -2.990 ; state.MOVS        ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.164      ; 4.584      ;
; -2.984 ; state.sltu        ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.813      ; 4.266      ;
; -2.947 ; state.jz          ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 4.236      ;
; -2.918 ; state.jme         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 4.207      ;
; -2.877 ; state.nop         ; bau[4]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.158      ;
; -2.838 ; state.jz          ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.129      ;
; -2.814 ; state.busca       ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 4.103      ;
; -2.809 ; state.jme         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 4.100      ;
; -2.808 ; state.jz          ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.490      ;
; -2.790 ; state.jz          ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.473      ;
; -2.779 ; state.jme         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.461      ;
; -2.778 ; state.jz          ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.461      ;
; -2.770 ; state.sltu        ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.966      ; 4.050      ;
; -2.761 ; state.jme         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.444      ;
; -2.749 ; state.jme         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.432      ;
; -2.705 ; state.busca       ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 3.996      ;
; -2.693 ; state.sltu        ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.243      ; 4.366      ;
; -2.675 ; state.busca       ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.357      ;
; -2.657 ; state.busca       ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.340      ;
; -2.645 ; state.busca       ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.328      ;
; -2.622 ; state.nop         ; bau[6]      ; clk               ; out_comparador[0] ; 0.500        ; 1.975      ; 3.911      ;
; -2.613 ; state.sltu        ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.244      ; 4.287      ;
; -2.601 ; state.sltu        ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.244      ; 4.275      ;
; -2.513 ; state.nop         ; bau[5]      ; clk               ; out_comparador[0] ; 0.500        ; 1.822      ; 3.804      ;
; -2.483 ; state.nop         ; bau[3]      ; clk               ; out_comparador[0] ; 0.500        ; 2.252      ; 4.165      ;
; -2.465 ; state.nop         ; bau[0]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.148      ;
; -2.453 ; state.nop         ; bau[2]      ; clk               ; out_comparador[0] ; 0.500        ; 2.253      ; 4.136      ;
; -0.982 ; bau[6]            ; ld_R6$latch ; state.initial     ; out_comparador[0] ; 1.000        ; 0.981      ; 0.987      ;
; -0.773 ; out_comparador[0] ; bau[1]      ; out_comparador[0] ; out_comparador[0] ; 0.500        ; 4.986      ; 4.513      ;
; -0.764 ; bau[1]            ; ld_R1$latch ; state.initial     ; out_comparador[0] ; 1.000        ; 0.641      ; 1.178      ;
; -0.701 ; state.jma         ; ld_RE$latch ; clk               ; out_comparador[0] ; 0.500        ; 3.413      ; 3.427      ;
; -0.680 ; bau[0]            ; ld_R0$latch ; state.initial     ; out_comparador[0] ; 1.000        ; 0.545      ; 0.999      ;
; -0.675 ; bau[3]            ; ld_R3$latch ; state.initial     ; out_comparador[0] ; 1.000        ; 0.549      ; 0.997      ;
; -0.632 ; state.ret         ; ld_RE$latch ; clk               ; out_comparador[0] ; 0.500        ; 3.413      ; 3.358      ;
; -0.632 ; bau[2]            ; ld_R2$latch ; state.initial     ; out_comparador[0] ; 1.000        ; 0.548      ; 0.999      ;
; -0.602 ; state.decodificar ; ld_R4$latch ; clk               ; out_comparador[0] ; 0.500        ; 3.371      ; 3.282      ;
+--------+-------------------+-------------+-------------------+-------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'state.initial'                                                                                     ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node     ; Launch Clock      ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+
; -3.407 ; state.ret         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.657      ; 4.818      ;
; -3.274 ; state.jma         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.657      ; 4.685      ;
; -3.208 ; state.mbh         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.708      ;
; -3.188 ; state.sw          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.790      ; 4.732      ;
; -3.180 ; state.lw          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.790      ; 4.724      ;
; -3.173 ; state.ret         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.951      ;
; -3.105 ; state.decodificar ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.737      ; 4.596      ;
; -3.071 ; state.mbl         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.571      ;
; -3.062 ; state.MOVS        ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.657      ; 4.473      ;
; -3.040 ; state.jma         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.818      ;
; -2.986 ; state.mbh         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.853      ;
; -2.958 ; state.lw          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.452      ; 4.869      ;
; -2.954 ; state.sw          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.452      ; 4.865      ;
; -2.918 ; state.ret         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.472      ; 4.704      ;
; -2.871 ; state.decodificar ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.399      ; 4.729      ;
; -2.850 ; state.jz          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.350      ;
; -2.849 ; state.mbl         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.716      ;
; -2.828 ; state.MOVS        ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.606      ;
; -2.821 ; state.jme         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.321      ;
; -2.809 ; state.ret         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.597      ;
; -2.785 ; state.jma         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.472      ; 4.571      ;
; -2.779 ; state.ret         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.749      ; 4.958      ;
; -2.761 ; state.ret         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.941      ;
; -2.749 ; state.ret         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.929      ;
; -2.731 ; state.mbh         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 4.606      ;
; -2.717 ; state.busca       ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.217      ;
; -2.703 ; state.lw          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.605      ; 4.622      ;
; -2.699 ; state.sw          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.605      ; 4.618      ;
; -2.676 ; state.jma         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.464      ;
; -2.654 ; state.sltu        ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.737      ; 4.145      ;
; -2.646 ; state.jma         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.749      ; 4.825      ;
; -2.628 ; state.jma         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.808      ;
; -2.616 ; state.jz          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.483      ;
; -2.616 ; state.decodificar ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.552      ; 4.482      ;
; -2.616 ; state.jma         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.796      ;
; -2.610 ; state.mbh         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.487      ;
; -2.594 ; state.mbl         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 4.469      ;
; -2.590 ; state.sw          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.452      ; 4.511      ;
; -2.587 ; state.jme         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.454      ;
; -2.582 ; state.lw          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.452      ; 4.503      ;
; -2.580 ; state.mbh         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.848      ;
; -2.574 ; state.mbh         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.843      ;
; -2.573 ; state.MOVS        ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.472      ; 4.359      ;
; -2.562 ; state.mbh         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.831      ;
; -2.560 ; state.sw          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.882      ; 4.872      ;
; -2.552 ; state.lw          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.882      ; 4.864      ;
; -2.546 ; state.lw          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.883      ; 4.859      ;
; -2.542 ; state.sw          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.883      ; 4.855      ;
; -2.534 ; state.lw          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.883      ; 4.847      ;
; -2.530 ; state.sw          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.883      ; 4.843      ;
; -2.525 ; state.nop         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 2.746      ; 4.025      ;
; -2.507 ; state.decodificar ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.399      ; 4.375      ;
; -2.483 ; state.busca       ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.350      ;
; -2.477 ; state.decodificar ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.829      ; 4.736      ;
; -2.473 ; state.mbl         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.350      ;
; -2.464 ; state.MOVS        ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.319      ; 4.252      ;
; -2.459 ; state.decodificar ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.830      ; 4.719      ;
; -2.447 ; state.decodificar ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.830      ; 4.707      ;
; -2.443 ; state.mbl         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.711      ;
; -2.439 ; state.sltu        ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.399      ; 4.297      ;
; -2.437 ; state.mbl         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.706      ;
; -2.434 ; state.MOVS        ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.749      ; 4.613      ;
; -2.425 ; state.mbl         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.694      ;
; -2.416 ; state.MOVS        ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.596      ;
; -2.404 ; state.MOVS        ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.750      ; 4.584      ;
; -2.398 ; state.sltu        ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.399      ; 4.266      ;
; -2.361 ; state.jz          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 4.236      ;
; -2.332 ; state.jme         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 4.207      ;
; -2.291 ; state.nop         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.158      ;
; -2.252 ; state.jz          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.129      ;
; -2.228 ; state.busca       ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 4.103      ;
; -2.223 ; state.jme         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 4.100      ;
; -2.222 ; state.jz          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.490      ;
; -2.204 ; state.jz          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.473      ;
; -2.193 ; state.jme         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.461      ;
; -2.192 ; state.jz          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.461      ;
; -2.184 ; state.sltu        ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.552      ; 4.050      ;
; -2.175 ; state.jme         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.444      ;
; -2.163 ; state.jme         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.432      ;
; -2.119 ; state.busca       ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 3.996      ;
; -2.107 ; state.sltu        ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.829      ; 4.366      ;
; -2.089 ; state.busca       ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.357      ;
; -2.071 ; state.busca       ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.340      ;
; -2.059 ; state.busca       ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.328      ;
; -2.036 ; state.nop         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 2.561      ; 3.911      ;
; -2.027 ; state.sltu        ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.830      ; 4.287      ;
; -2.015 ; state.sltu        ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.830      ; 4.275      ;
; -1.927 ; state.nop         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 2.408      ; 3.804      ;
; -1.897 ; state.nop         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 2.838      ; 4.165      ;
; -1.879 ; state.nop         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.148      ;
; -1.867 ; state.nop         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 2.839      ; 4.136      ;
; -0.187 ; out_comparador[0] ; bau[1]      ; out_comparador[0] ; state.initial ; 0.500        ; 5.572      ; 4.513      ;
; 0.028  ; out_comparador[0] ; bau[4]      ; out_comparador[0] ; state.initial ; 0.500        ; 5.234      ; 4.665      ;
; 0.039  ; state.initial     ; bau[1]      ; state.initial     ; state.initial ; 0.500        ; 5.572      ; 4.573      ;
; 0.069  ; out_comparador[0] ; bau[5]      ; out_comparador[0] ; state.initial ; 0.500        ; 5.234      ; 4.634      ;
; 0.273  ; state.initial     ; bau[4]      ; state.initial     ; state.initial ; 0.500        ; 5.234      ; 4.706      ;
; 0.283  ; out_comparador[0] ; bau[6]      ; out_comparador[0] ; state.initial ; 0.500        ; 5.387      ; 4.418      ;
; 0.313  ; out_comparador[0] ; bau[1]      ; out_comparador[0] ; state.initial ; 1.000        ; 5.572      ; 4.513      ;
; 0.360  ; out_comparador[0] ; bau[3]      ; out_comparador[0] ; state.initial ; 0.500        ; 5.664      ; 4.734      ;
; 0.424  ; state.jma         ; ld_PC$latch ; clk               ; state.initial ; 1.000        ; 2.277      ; 1.666      ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'state.MOV'                                                                                           ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; -2.277 ; state.sub         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.761      ;
; -2.257 ; state.sub         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.674      ; 3.882      ;
; -2.247 ; state.xorr        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.731      ;
; -2.232 ; state.sub         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.761      ;
; -2.227 ; state.xorr        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.674      ; 3.852      ;
; -2.202 ; state.xorr        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.731      ;
; -2.128 ; state.orr         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.612      ;
; -2.117 ; state.sub         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.835      ; 3.719      ;
; -2.117 ; state.MOVS        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.436      ; 3.468      ;
; -2.115 ; state.sub         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.834      ; 3.715      ;
; -2.111 ; state.jma         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.503      ; 3.427      ;
; -2.108 ; state.orr         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.674      ; 3.733      ;
; -2.087 ; state.xorr        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.835      ; 3.689      ;
; -2.085 ; state.xorr        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.834      ; 3.685      ;
; -2.083 ; state.orr         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.612      ;
; -2.076 ; state.sub         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.723      ; 3.601      ;
; -2.072 ; state.MOVS        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.436      ; 3.468      ;
; -2.070 ; state.mbl         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.630      ; 3.651      ;
; -2.046 ; state.xorr        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.723      ; 3.571      ;
; -2.042 ; state.ret         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.503      ; 3.358      ;
; -1.995 ; state.decodificar ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.583      ; 3.391      ;
; -1.968 ; state.orr         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.835      ; 3.570      ;
; -1.966 ; state.orr         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.834      ; 3.566      ;
; -1.930 ; state.mbl         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.791      ; 3.488      ;
; -1.928 ; state.mbl         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.790      ; 3.484      ;
; -1.927 ; state.orr         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.723      ; 3.452      ;
; -1.919 ; state.sltu        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.516      ; 3.350      ;
; -1.916 ; state.MOVS        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.590      ; 3.308      ;
; -1.915 ; state.mbh         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.630      ; 3.496      ;
; -1.874 ; state.sltu        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.516      ; 3.350      ;
; -1.841 ; state.jz          ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.630      ; 3.422      ;
; -1.775 ; state.mbh         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.791      ; 3.333      ;
; -1.773 ; state.mbh         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.790      ; 3.329      ;
; -1.759 ; state.slt         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.243      ;
; -1.739 ; state.slt         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.674      ; 3.364      ;
; -1.718 ; state.sltu        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.670      ; 3.190      ;
; -1.714 ; state.slt         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 3.243      ;
; -1.701 ; state.jz          ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.791      ; 3.259      ;
; -1.699 ; state.jz          ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.790      ; 3.255      ;
; -1.680 ; state.jme         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.630      ; 3.261      ;
; -1.656 ; state.sltu        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.621      ; 3.228      ;
; -1.655 ; state.sub         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.636      ; 3.104      ;
; -1.625 ; state.xorr        ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.636      ; 3.074      ;
; -1.612 ; state.andd        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.674      ; 3.237      ;
; -1.607 ; state.busca       ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.592      ; 3.012      ;
; -1.599 ; state.slt         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.835      ; 3.201      ;
; -1.597 ; state.slt         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.834      ; 3.197      ;
; -1.558 ; state.slt         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.723      ; 3.083      ;
; -1.540 ; state.jme         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.791      ; 3.098      ;
; -1.538 ; state.jme         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.790      ; 3.094      ;
; -1.516 ; state.sltu        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.782      ; 3.065      ;
; -1.514 ; state.sltu        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.781      ; 3.061      ;
; -1.506 ; state.orr         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 1.636      ; 2.955      ;
; -1.472 ; state.andd        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.835      ; 3.074      ;
; -1.470 ; state.andd        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.834      ; 3.070      ;
; -1.374 ; state.busca       ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 1.380      ; 2.540      ;
; -1.316 ; state.mbl         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 1.380      ; 2.482      ;
; -1.303 ; state.andd        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 2.787      ;
; -1.258 ; state.andd        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 1.569      ; 2.787      ;
; -1.161 ; state.mbh         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 1.380      ; 2.327      ;
; -1.102 ; state.andd        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 1.723      ; 2.627      ;
; -0.887 ; state.jma         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 1.291      ; 1.964      ;
; -0.617 ; state.ret         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 1.291      ; 1.694      ;
; 0.364  ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.351      ; 3.688      ;
; 0.384  ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.456      ; 3.809      ;
; 0.409  ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.351      ; 3.688      ;
; 0.524  ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.617      ; 3.646      ;
; 0.526  ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.616      ; 3.642      ;
; 0.565  ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 0.500        ; 4.505      ; 3.528      ;
; 0.649  ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 0.500        ; 4.418      ; 3.368      ;
; 0.864  ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.351      ; 3.688      ;
; 0.884  ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.456      ; 3.809      ;
; 0.909  ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.351      ; 3.688      ;
; 0.986  ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 0.500        ; 4.418      ; 3.031      ;
; 1.024  ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.617      ; 3.646      ;
; 1.026  ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.616      ; 3.642      ;
; 1.065  ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 1.000        ; 4.505      ; 3.528      ;
; 1.149  ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 1.000        ; 4.418      ; 3.368      ;
; 1.486  ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 1.000        ; 4.418      ; 3.031      ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                               ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node           ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; -1.318 ; state.decodificar ; state.busca       ; clk           ; clk         ; 1.000        ; -0.009     ; 2.348      ;
; -1.150 ; state.decodificar ; state.jme         ; clk           ; clk         ; 1.000        ; -0.009     ; 2.180      ;
; -1.065 ; state.decodificar ; state.ret         ; clk           ; clk         ; 1.000        ; 0.080      ; 2.184      ;
; -1.065 ; state.decodificar ; state.MOVS        ; clk           ; clk         ; 1.000        ; 0.080      ; 2.184      ;
; -1.038 ; state.decodificar ; state.jma         ; clk           ; clk         ; 1.000        ; 0.080      ; 2.157      ;
; -1.027 ; state.decodificar ; state.mbh         ; clk           ; clk         ; 1.000        ; -0.009     ; 2.057      ;
; -1.025 ; state.decodificar ; state.jz          ; clk           ; clk         ; 1.000        ; -0.009     ; 2.055      ;
; -1.024 ; state.decodificar ; state.mbl         ; clk           ; clk         ; 1.000        ; -0.009     ; 2.054      ;
; -0.990 ; state.decodificar ; state.lw          ; clk           ; clk         ; 1.000        ; -0.053     ; 1.976      ;
; -0.989 ; state.decodificar ; state.sw          ; clk           ; clk         ; 1.000        ; -0.053     ; 1.975      ;
; -0.951 ; state.decodificar ; state.orr         ; clk           ; clk         ; 1.000        ; -0.053     ; 1.937      ;
; -0.951 ; state.decodificar ; state.xorr        ; clk           ; clk         ; 1.000        ; -0.053     ; 1.937      ;
; -0.950 ; state.decodificar ; state.andd        ; clk           ; clk         ; 1.000        ; -0.053     ; 1.936      ;
; -0.947 ; state.decodificar ; state.slt         ; clk           ; clk         ; 1.000        ; -0.053     ; 1.933      ;
; -0.946 ; state.decodificar ; state.sub         ; clk           ; clk         ; 1.000        ; -0.053     ; 1.932      ;
; -0.844 ; state.decodificar ; state.nop         ; clk           ; clk         ; 1.000        ; -0.009     ; 1.874      ;
; -0.831 ; state.decodificar ; state.add         ; clk           ; clk         ; 1.000        ; -0.241     ; 1.629      ;
; -0.828 ; state.decodificar ; state.MOV         ; clk           ; clk         ; 1.000        ; -0.241     ; 1.626      ;
; -0.604 ; state.decodificar ; state.sltu        ; clk           ; clk         ; 1.000        ; 0.000      ; 1.643      ;
; -0.542 ; state.busca       ; state.busca       ; clk           ; clk         ; 1.000        ; 0.000      ; 1.581      ;
; -0.332 ; state.busca       ; state.decodificar ; clk           ; clk         ; 1.000        ; 0.009      ; 1.380      ;
; 1.714  ; state.initial     ; state.busca       ; state.initial ; clk         ; 0.500        ; 2.826      ; 1.937      ;
; 2.214  ; state.initial     ; state.busca       ; state.initial ; clk         ; 1.000        ; 2.826      ; 1.937      ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'state.add'                                                                                   ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node   ; To Node            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; -0.455 ; state.sub   ; selmux3$latch      ; clk          ; state.add   ; 0.500        ; 1.869      ; 1.590      ;
; -0.413 ; state.jma   ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 1.940      ; 1.666      ;
; -0.254 ; state.ret   ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 1.940      ; 1.507      ;
; -0.203 ; state.busca ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 2.029      ; 1.545      ;
; -0.179 ; state.sub   ; sel_ULA[0]$latch   ; clk          ; state.add   ; 0.500        ; 2.352      ; 1.844      ;
; -0.028 ; state.busca ; pc_increment$latch ; clk          ; state.add   ; 0.500        ; 2.073      ; 1.413      ;
; -0.023 ; state.orr   ; sel_ULA[0]$latch   ; clk          ; state.add   ; 0.500        ; 2.352      ; 1.688      ;
; -0.018 ; state.orr   ; sel_ULA[1]$latch   ; clk          ; state.add   ; 0.500        ; 2.351      ; 1.688      ;
; 0.057  ; state.andd  ; sel_ULA[1]$latch   ; clk          ; state.add   ; 0.500        ; 2.351      ; 1.613      ;
; 0.347  ; state.MOVS  ; ld_RS$latch        ; clk          ; state.add   ; 0.500        ; 1.939      ; 0.875      ;
; 0.803  ; state.xorr  ; sel_ULA[2]$latch   ; clk          ; state.add   ; 0.500        ; 2.339      ; 0.850      ;
; 2.696  ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 0.500        ; 4.651      ; 1.507      ;
; 3.196  ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 1.000        ; 4.651      ; 1.507      ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'out_comparador[0]'                                                                                              ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock      ; Latch Clock       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+
; -5.564 ; state.initial     ; ld_RP$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.284      ; 1.006      ;
; -5.064 ; state.initial     ; ld_RP$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.284      ; 1.006      ;
; -3.795 ; state.initial     ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.368      ; 2.859      ;
; -3.583 ; state.add         ; ld_RE$latch         ; state.add         ; out_comparador[0] ; 0.000        ; 6.328      ; 3.031      ;
; -3.349 ; state.add         ; sel_mux5_1[0]$latch ; state.add         ; out_comparador[0] ; 0.000        ; 6.150      ; 3.087      ;
; -3.304 ; state.add         ; sel_mux5_1[2]$latch ; state.add         ; out_comparador[0] ; 0.000        ; 6.149      ; 3.131      ;
; -3.295 ; state.initial     ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.368      ; 2.859      ;
; -3.246 ; state.initial     ; ld_RE$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.328      ; 3.368      ;
; -3.083 ; state.add         ; ld_RE$latch         ; state.add         ; out_comparador[0] ; -0.500       ; 6.328      ; 3.031      ;
; -2.849 ; state.add         ; sel_mux5_1[0]$latch ; state.add         ; out_comparador[0] ; -0.500       ; 6.150      ; 3.087      ;
; -2.804 ; state.add         ; sel_mux5_1[2]$latch ; state.add         ; out_comparador[0] ; -0.500       ; 6.149      ; 3.131      ;
; -2.746 ; state.initial     ; ld_RE$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.328      ; 3.368      ;
; -2.591 ; state.initial     ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.205      ; 3.900      ;
; -2.589 ; state.initial     ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.206      ; 3.903      ;
; -2.319 ; state.initial     ; ld_R2$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.213      ; 4.180      ;
; -2.319 ; state.initial     ; ld_R3$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.213      ; 4.180      ;
; -2.317 ; state.initial     ; ld_R1$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.213      ; 4.182      ;
; -2.316 ; state.initial     ; ld_R0$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 6.210      ; 4.180      ;
; -2.091 ; state.initial     ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.205      ; 3.900      ;
; -2.089 ; state.initial     ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.206      ; 3.903      ;
; -1.984 ; state.MOV         ; bau[6]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 4.801      ; 3.103      ;
; -1.819 ; state.initial     ; ld_R2$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.213      ; 4.180      ;
; -1.819 ; state.initial     ; ld_R3$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.213      ; 4.180      ;
; -1.817 ; state.initial     ; ld_R1$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.213      ; 4.182      ;
; -1.816 ; state.initial     ; ld_R0$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 6.210      ; 4.180      ;
; -1.654 ; state.MOV         ; bau[3]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 5.078      ; 3.710      ;
; -1.589 ; state.MOV         ; bau[2]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 5.079      ; 3.776      ;
; -1.493 ; state.MOV         ; bau[1]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 4.986      ; 3.779      ;
; -1.484 ; state.MOV         ; bau[6]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 4.801      ; 3.103      ;
; -1.436 ; state.MOV         ; bau[0]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 5.079      ; 3.929      ;
; -1.420 ; state.decodificar ; ld_R6$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.533      ; 1.613      ;
; -1.387 ; state.MOV         ; bau[4]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 4.648      ; 3.547      ;
; -1.383 ; state.MOV         ; bau[5]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 4.648      ; 3.551      ;
; -1.187 ; state.initial     ; bau[2]              ; state.initial     ; out_comparador[0] ; 0.000        ; 5.079      ; 4.178      ;
; -1.154 ; state.MOV         ; bau[3]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 5.078      ; 3.710      ;
; -1.115 ; state.busca       ; ld_R6$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.542      ; 1.927      ;
; -1.089 ; state.MOV         ; bau[2]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 5.079      ; 3.776      ;
; -1.047 ; state.initial     ; bau[3]              ; state.initial     ; out_comparador[0] ; 0.000        ; 5.078      ; 4.317      ;
; -0.993 ; state.MOV         ; bau[1]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 4.986      ; 3.779      ;
; -0.969 ; state.initial     ; bau[6]              ; state.initial     ; out_comparador[0] ; 0.000        ; 4.801      ; 4.118      ;
; -0.954 ; state.sw          ; sel_mux5_1[1]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.365      ; 1.911      ;
; -0.951 ; state.sw          ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.367      ; 1.916      ;
; -0.936 ; state.MOV         ; bau[0]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 5.079      ; 3.929      ;
; -0.887 ; state.MOV         ; bau[4]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 4.648      ; 3.547      ;
; -0.883 ; state.MOV         ; bau[5]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 4.648      ; 3.551      ;
; -0.880 ; out_comparador[0] ; bau[3]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 5.078      ; 4.198      ;
; -0.865 ; state.initial     ; bau[1]              ; state.initial     ; out_comparador[0] ; 0.000        ; 4.986      ; 4.407      ;
; -0.807 ; state.initial     ; bau[0]              ; state.initial     ; out_comparador[0] ; 0.000        ; 5.079      ; 4.558      ;
; -0.797 ; out_comparador[0] ; bau[2]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 5.079      ; 4.282      ;
; -0.796 ; state.busca       ; ld_R2$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.387      ; 2.091      ;
; -0.794 ; state.busca       ; ld_R1$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.387      ; 2.093      ;
; -0.794 ; state.busca       ; ld_R3$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.387      ; 2.093      ;
; -0.790 ; state.busca       ; ld_R0$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.384      ; 2.094      ;
; -0.752 ; state.initial     ; bau[4]              ; state.initial     ; out_comparador[0] ; 0.000        ; 4.648      ; 4.182      ;
; -0.749 ; state.initial     ; bau[5]              ; state.initial     ; out_comparador[0] ; 0.000        ; 4.648      ; 4.185      ;
; -0.733 ; out_comparador[0] ; bau[1]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 4.986      ; 4.253      ;
; -0.687 ; state.initial     ; bau[2]              ; state.initial     ; out_comparador[0] ; -0.500       ; 5.079      ; 4.178      ;
; -0.686 ; out_comparador[0] ; bau[0]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 5.079      ; 4.393      ;
; -0.664 ; state.busca       ; ld_R5$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.379      ; 2.215      ;
; -0.662 ; state.busca       ; ld_R4$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.380      ; 2.218      ;
; -0.580 ; bau[6]            ; ld_R6$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.567      ; 0.987      ;
; -0.578 ; bau[5]            ; ld_R5$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.557      ; 0.979      ;
; -0.567 ; bau[4]            ; ld_R4$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.558      ; 0.991      ;
; -0.547 ; state.initial     ; bau[3]              ; state.initial     ; out_comparador[0] ; -0.500       ; 5.078      ; 4.317      ;
; -0.539 ; state.lw          ; sel_mux5_1[1]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.365      ; 2.326      ;
; -0.496 ; out_comparador[0] ; bau[6]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 4.801      ; 4.305      ;
; -0.469 ; state.initial     ; bau[6]              ; state.initial     ; out_comparador[0] ; -0.500       ; 4.801      ; 4.118      ;
; -0.452 ; state.sw          ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.368      ; 2.416      ;
; -0.403 ; state.andd        ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.367      ; 2.464      ;
; -0.380 ; out_comparador[0] ; bau[3]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 5.078      ; 4.198      ;
; -0.375 ; out_comparador[0] ; bau[4]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 4.648      ; 4.273      ;
; -0.365 ; state.initial     ; bau[1]              ; state.initial     ; out_comparador[0] ; -0.500       ; 4.986      ; 4.407      ;
; -0.356 ; out_comparador[0] ; bau[5]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 4.648      ; 4.292      ;
; -0.307 ; state.initial     ; bau[0]              ; state.initial     ; out_comparador[0] ; -0.500       ; 5.079      ; 4.558      ;
; -0.297 ; out_comparador[0] ; bau[2]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 5.079      ; 4.282      ;
; -0.289 ; state.lw          ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.368      ; 2.579      ;
; -0.252 ; state.initial     ; bau[4]              ; state.initial     ; out_comparador[0] ; -0.500       ; 4.648      ; 4.182      ;
; -0.249 ; state.initial     ; bau[5]              ; state.initial     ; out_comparador[0] ; -0.500       ; 4.648      ; 4.185      ;
; -0.233 ; out_comparador[0] ; bau[1]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 4.986      ; 4.253      ;
; -0.186 ; out_comparador[0] ; bau[0]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 5.079      ; 4.393      ;
; -0.138 ; bau[3]            ; ld_R3$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.135      ; 0.997      ;
; -0.135 ; bau[2]            ; ld_R2$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.134      ; 0.999      ;
; -0.132 ; bau[0]            ; ld_R0$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.131      ; 0.999      ;
; -0.091 ; state.orr         ; ld_RE$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.546      ; 2.955      ;
; -0.049 ; bau[1]            ; ld_R1$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.227      ; 1.178      ;
; 0.004  ; out_comparador[0] ; bau[6]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 4.801      ; 4.305      ;
; 0.006  ; bau[6]            ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.981      ; 0.987      ;
; 0.008  ; bau[5]            ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.971      ; 0.979      ;
; 0.010  ; state.busca       ; ld_RE$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.502      ; 3.012      ;
; 0.013  ; state.decodificar ; ld_R3$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.378      ; 2.891      ;
; 0.016  ; state.decodificar ; ld_R0$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.375      ; 2.891      ;
; 0.017  ; state.decodificar ; ld_R2$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.378      ; 2.895      ;
; 0.018  ; state.decodificar ; ld_R1$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.378      ; 2.896      ;
; 0.019  ; bau[4]            ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.972      ; 0.991      ;
; 0.028  ; state.xorr        ; ld_RE$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.546      ; 3.074      ;
; 0.058  ; state.sub         ; ld_RE$latch         ; clk               ; out_comparador[0] ; -0.500       ; 3.546      ; 3.104      ;
; 0.125  ; out_comparador[0] ; bau[4]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 4.648      ; 4.273      ;
; 0.144  ; out_comparador[0] ; bau[5]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 4.648      ; 4.292      ;
; 0.188  ; state.orr         ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.367      ; 3.055      ;
; 0.302  ; state.sub         ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 3.368      ; 3.170      ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'state.initial'                                                                                             ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node            ; Launch Clock      ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+
; -4.164 ; state.initial     ; ld_RP$latch        ; state.initial     ; state.initial ; 0.000        ; 4.884      ; 1.006      ;
; -3.664 ; state.initial     ; ld_RP$latch        ; state.initial     ; state.initial ; -0.500       ; 4.884      ; 1.006      ;
; -2.570 ; state.MOV         ; bau[6]             ; state.MOV         ; state.initial ; 0.000        ; 5.387      ; 3.103      ;
; -2.240 ; state.MOV         ; bau[3]             ; state.MOV         ; state.initial ; 0.000        ; 5.664      ; 3.710      ;
; -2.175 ; state.MOV         ; bau[2]             ; state.MOV         ; state.initial ; 0.000        ; 5.665      ; 3.776      ;
; -2.079 ; state.MOV         ; bau[1]             ; state.MOV         ; state.initial ; 0.000        ; 5.572      ; 3.779      ;
; -2.070 ; state.MOV         ; bau[6]             ; state.MOV         ; state.initial ; -0.500       ; 5.387      ; 3.103      ;
; -2.022 ; state.MOV         ; bau[0]             ; state.MOV         ; state.initial ; 0.000        ; 5.665      ; 3.929      ;
; -1.973 ; state.MOV         ; bau[4]             ; state.MOV         ; state.initial ; 0.000        ; 5.234      ; 3.547      ;
; -1.969 ; state.MOV         ; bau[5]             ; state.MOV         ; state.initial ; 0.000        ; 5.234      ; 3.551      ;
; -1.773 ; state.initial     ; bau[2]             ; state.initial     ; state.initial ; 0.000        ; 5.665      ; 4.178      ;
; -1.740 ; state.MOV         ; bau[3]             ; state.MOV         ; state.initial ; -0.500       ; 5.664      ; 3.710      ;
; -1.724 ; state.xorr        ; sel_ULA[2]$latch   ; clk               ; state.initial ; 0.000        ; 2.574      ; 0.850      ;
; -1.675 ; state.MOV         ; bau[2]             ; state.MOV         ; state.initial ; -0.500       ; 5.665      ; 3.776      ;
; -1.633 ; state.initial     ; bau[3]             ; state.initial     ; state.initial ; 0.000        ; 5.664      ; 4.317      ;
; -1.579 ; state.MOV         ; bau[1]             ; state.MOV         ; state.initial ; -0.500       ; 5.572      ; 3.779      ;
; -1.555 ; state.initial     ; bau[6]             ; state.initial     ; state.initial ; 0.000        ; 5.387      ; 4.118      ;
; -1.522 ; state.MOV         ; bau[0]             ; state.MOV         ; state.initial ; -0.500       ; 5.665      ; 3.929      ;
; -1.513 ; state.MOVS        ; ld_RS$latch        ; clk               ; state.initial ; 0.000        ; 2.388      ; 0.875      ;
; -1.473 ; state.MOV         ; bau[4]             ; state.MOV         ; state.initial ; -0.500       ; 5.234      ; 3.547      ;
; -1.469 ; state.MOV         ; bau[5]             ; state.MOV         ; state.initial ; -0.500       ; 5.234      ; 3.551      ;
; -1.466 ; out_comparador[0] ; bau[3]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.664      ; 4.198      ;
; -1.451 ; state.initial     ; bau[1]             ; state.initial     ; state.initial ; 0.000        ; 5.572      ; 4.407      ;
; -1.393 ; state.initial     ; bau[0]             ; state.initial     ; state.initial ; 0.000        ; 5.665      ; 4.558      ;
; -1.383 ; out_comparador[0] ; bau[2]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.665      ; 4.282      ;
; -1.338 ; state.initial     ; bau[4]             ; state.initial     ; state.initial ; 0.000        ; 5.234      ; 4.182      ;
; -1.335 ; state.initial     ; bau[5]             ; state.initial     ; state.initial ; 0.000        ; 5.234      ; 4.185      ;
; -1.319 ; out_comparador[0] ; bau[1]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.572      ; 4.253      ;
; -1.273 ; state.initial     ; bau[2]             ; state.initial     ; state.initial ; -0.500       ; 5.665      ; 4.178      ;
; -1.272 ; out_comparador[0] ; bau[0]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.665      ; 4.393      ;
; -1.133 ; state.initial     ; bau[3]             ; state.initial     ; state.initial ; -0.500       ; 5.664      ; 4.317      ;
; -1.082 ; out_comparador[0] ; bau[6]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.387      ; 4.305      ;
; -1.067 ; state.sw          ; ld_MemDados$latch  ; clk               ; state.initial ; 0.000        ; 1.916      ; 0.849      ;
; -1.055 ; state.initial     ; bau[6]             ; state.initial     ; state.initial ; -0.500       ; 5.387      ; 4.118      ;
; -0.973 ; state.andd        ; sel_ULA[1]$latch   ; clk               ; state.initial ; 0.000        ; 2.586      ; 1.613      ;
; -0.966 ; out_comparador[0] ; bau[3]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.664      ; 4.198      ;
; -0.961 ; out_comparador[0] ; bau[4]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.234      ; 4.273      ;
; -0.951 ; state.initial     ; bau[1]             ; state.initial     ; state.initial ; -0.500       ; 5.572      ; 4.407      ;
; -0.942 ; out_comparador[0] ; bau[5]             ; out_comparador[0] ; state.initial ; 0.000        ; 5.234      ; 4.292      ;
; -0.899 ; state.orr         ; sel_ULA[0]$latch   ; clk               ; state.initial ; 0.000        ; 2.587      ; 1.688      ;
; -0.898 ; state.orr         ; sel_ULA[1]$latch   ; clk               ; state.initial ; 0.000        ; 2.586      ; 1.688      ;
; -0.893 ; state.initial     ; bau[0]             ; state.initial     ; state.initial ; -0.500       ; 5.665      ; 4.558      ;
; -0.883 ; out_comparador[0] ; bau[2]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.665      ; 4.282      ;
; -0.838 ; state.initial     ; bau[4]             ; state.initial     ; state.initial ; -0.500       ; 5.234      ; 4.182      ;
; -0.835 ; state.initial     ; bau[5]             ; state.initial     ; state.initial ; -0.500       ; 5.234      ; 4.185      ;
; -0.821 ; state.busca       ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 2.366      ; 1.545      ;
; -0.819 ; out_comparador[0] ; bau[1]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.572      ; 4.253      ;
; -0.793 ; state.busca       ; pc_increment$latch ; clk               ; state.initial ; 0.000        ; 2.206      ; 1.413      ;
; -0.772 ; out_comparador[0] ; bau[0]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.665      ; 4.393      ;
; -0.770 ; state.ret         ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 2.277      ; 1.507      ;
; -0.743 ; state.sub         ; sel_ULA[0]$latch   ; clk               ; state.initial ; 0.000        ; 2.587      ; 1.844      ;
; -0.611 ; state.jma         ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 2.277      ; 1.666      ;
; -0.582 ; out_comparador[0] ; bau[6]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.387      ; 4.305      ;
; -0.461 ; out_comparador[0] ; bau[4]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.234      ; 4.273      ;
; -0.442 ; out_comparador[0] ; bau[5]             ; out_comparador[0] ; state.initial ; -0.500       ; 5.234      ; 4.292      ;
; 1.291  ; state.nop         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 3.630      ;
; 1.431  ; state.nop         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.838      ; 3.769      ;
; 1.483  ; state.busca       ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 3.822      ;
; 1.501  ; state.sltu        ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.829      ; 3.830      ;
; 1.509  ; state.nop         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.570      ;
; 1.584  ; state.sltu        ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.830      ; 3.914      ;
; 1.587  ; state.jme         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 3.926      ;
; 1.613  ; state.nop         ; bau[1]             ; clk               ; state.initial ; -0.500       ; 2.746      ; 3.859      ;
; 1.616  ; state.jz          ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 3.955      ;
; 1.623  ; state.busca       ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.838      ; 3.961      ;
; 1.648  ; state.sltu        ; bau[1]             ; clk               ; state.initial ; -0.500       ; 2.737      ; 3.885      ;
; 1.671  ; state.nop         ; bau[0]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 4.010      ;
; 1.695  ; state.sltu        ; bau[0]             ; clk               ; state.initial ; -0.500       ; 2.830      ; 4.025      ;
; 1.701  ; state.busca       ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.762      ;
; 1.723  ; state.mbl         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.784      ;
; 1.726  ; state.nop         ; bau[4]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.634      ;
; 1.727  ; state.jme         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.838      ; 4.065      ;
; 1.729  ; state.nop         ; bau[5]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.637      ;
; 1.756  ; state.jz          ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.838      ; 4.094      ;
; 1.805  ; state.jme         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.866      ;
; 1.805  ; state.busca       ; bau[1]             ; clk               ; state.initial ; -0.500       ; 2.746      ; 4.051      ;
; 1.828  ; state.MOVS        ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.750      ; 4.078      ;
; 1.832  ; state.lw          ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.605      ; 3.937      ;
; 1.834  ; state.jz          ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.895      ;
; 1.860  ; state.mbh         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.561      ; 3.921      ;
; 1.863  ; state.busca       ; bau[0]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 4.202      ;
; 1.871  ; state.decodificar ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.830      ; 4.201      ;
; 1.885  ; state.sltu        ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.552      ; 3.937      ;
; 1.909  ; state.jme         ; bau[1]             ; clk               ; state.initial ; -0.500       ; 2.746      ; 4.155      ;
; 1.918  ; state.busca       ; bau[4]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.826      ;
; 1.921  ; state.busca       ; bau[5]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.829      ;
; 1.938  ; state.jz          ; bau[1]             ; clk               ; state.initial ; -0.500       ; 2.746      ; 4.184      ;
; 1.954  ; state.sw          ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.883      ; 4.337      ;
; 1.967  ; state.jme         ; bau[0]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 4.306      ;
; 1.968  ; state.MOVS        ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.749      ; 4.217      ;
; 1.996  ; state.jz          ; bau[0]             ; clk               ; state.initial ; -0.500       ; 2.839      ; 4.335      ;
; 2.006  ; state.sltu        ; bau[4]             ; clk               ; state.initial ; -0.500       ; 2.399      ; 3.905      ;
; 2.011  ; state.decodificar ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.829      ; 4.340      ;
; 2.022  ; state.jme         ; bau[4]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.930      ;
; 2.025  ; state.jme         ; bau[5]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.933      ;
; 2.025  ; state.sltu        ; bau[5]             ; clk               ; state.initial ; -0.500       ; 2.399      ; 3.924      ;
; 2.040  ; state.jma         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 2.750      ; 4.290      ;
; 2.046  ; state.MOVS        ; bau[6]             ; clk               ; state.initial ; -0.500       ; 2.472      ; 4.018      ;
; 2.051  ; state.jz          ; bau[4]             ; clk               ; state.initial ; -0.500       ; 2.408      ; 3.959      ;
; 2.053  ; state.mbl         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 2.838      ; 4.391      ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'state.add'                                                                                    ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node   ; To Node            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; -3.430 ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 0.000        ; 4.651      ; 1.507      ;
; -2.930 ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; -0.500       ; 4.651      ; 1.507      ;
; -0.989 ; state.xorr  ; sel_ULA[2]$latch   ; clk          ; state.add   ; -0.500       ; 2.339      ; 0.850      ;
; -0.564 ; state.MOVS  ; ld_RS$latch        ; clk          ; state.add   ; -0.500       ; 1.939      ; 0.875      ;
; -0.238 ; state.andd  ; sel_ULA[1]$latch   ; clk          ; state.add   ; -0.500       ; 2.351      ; 1.613      ;
; -0.164 ; state.orr   ; sel_ULA[0]$latch   ; clk          ; state.add   ; -0.500       ; 2.352      ; 1.688      ;
; -0.163 ; state.orr   ; sel_ULA[1]$latch   ; clk          ; state.add   ; -0.500       ; 2.351      ; 1.688      ;
; -0.160 ; state.busca ; pc_increment$latch ; clk          ; state.add   ; -0.500       ; 2.073      ; 1.413      ;
; -0.008 ; state.sub   ; sel_ULA[0]$latch   ; clk          ; state.add   ; -0.500       ; 2.352      ; 1.844      ;
; 0.016  ; state.busca ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 2.029      ; 1.545      ;
; 0.067  ; state.ret   ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 1.940      ; 1.507      ;
; 0.221  ; state.sub   ; selmux3$latch      ; clk          ; state.add   ; -0.500       ; 1.869      ; 1.590      ;
; 0.226  ; state.jma   ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 1.940      ; 1.666      ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'state.MOV'                                                                                            ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; -1.673 ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 0.000        ; 4.418      ; 3.031      ;
; -1.336 ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 0.000        ; 4.418      ; 3.368      ;
; -1.263 ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.505      ; 3.528      ;
; -1.260 ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.616      ; 3.642      ;
; -1.257 ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.617      ; 3.646      ;
; -1.173 ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; -0.500       ; 4.418      ; 3.031      ;
; -0.949 ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.351      ; 3.688      ;
; -0.949 ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.351      ; 3.688      ;
; -0.933 ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 0.000        ; 4.456      ; 3.809      ;
; -0.836 ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; -0.500       ; 4.418      ; 3.368      ;
; -0.763 ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.505      ; 3.528      ;
; -0.760 ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.616      ; 3.642      ;
; -0.757 ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.617      ; 3.646      ;
; -0.449 ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.351      ; 3.688      ;
; -0.449 ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.351      ; 3.688      ;
; -0.433 ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; -0.500       ; 4.456      ; 3.809      ;
; 0.403  ; state.ret         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 1.291      ; 1.694      ;
; 0.673  ; state.jma         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 1.291      ; 1.964      ;
; 0.837  ; state.sltu        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.781      ; 2.618      ;
; 0.837  ; state.sltu        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.782      ; 2.619      ;
; 0.904  ; state.andd        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.723      ; 2.627      ;
; 0.947  ; state.mbh         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 1.380      ; 2.327      ;
; 1.102  ; state.mbl         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 1.380      ; 2.482      ;
; 1.160  ; state.busca       ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 1.380      ; 2.540      ;
; 1.166  ; state.sltu        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.621      ; 2.787      ;
; 1.218  ; state.andd        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 2.787      ;
; 1.218  ; state.andd        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 2.787      ;
; 1.236  ; state.andd        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.834      ; 3.070      ;
; 1.239  ; state.andd        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.835      ; 3.074      ;
; 1.304  ; state.jme         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.790      ; 3.094      ;
; 1.307  ; state.jme         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.791      ; 3.098      ;
; 1.319  ; state.orr         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.636      ; 2.955      ;
; 1.360  ; state.slt         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.723      ; 3.083      ;
; 1.363  ; state.slt         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.834      ; 3.197      ;
; 1.366  ; state.slt         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.835      ; 3.201      ;
; 1.406  ; state.sltu        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.670      ; 3.076      ;
; 1.420  ; state.busca       ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.592      ; 3.012      ;
; 1.438  ; state.xorr        ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.636      ; 3.074      ;
; 1.465  ; state.jz          ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.790      ; 3.255      ;
; 1.468  ; state.jz          ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.791      ; 3.259      ;
; 1.468  ; state.sub         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.636      ; 3.104      ;
; 1.539  ; state.mbh         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.790      ; 3.329      ;
; 1.542  ; state.mbh         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.791      ; 3.333      ;
; 1.563  ; state.andd        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.674      ; 3.237      ;
; 1.604  ; state.MOVS        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.590      ; 3.194      ;
; 1.631  ; state.jme         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.630      ; 3.261      ;
; 1.674  ; state.slt         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.243      ;
; 1.674  ; state.slt         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.243      ;
; 1.690  ; state.slt         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.674      ; 3.364      ;
; 1.694  ; state.mbl         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.790      ; 3.484      ;
; 1.697  ; state.mbl         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.791      ; 3.488      ;
; 1.716  ; state.sltu        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.516      ; 3.232      ;
; 1.718  ; state.sltu        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.516      ; 3.234      ;
; 1.729  ; state.orr         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.723      ; 3.452      ;
; 1.732  ; state.orr         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.834      ; 3.566      ;
; 1.735  ; state.orr         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.835      ; 3.570      ;
; 1.792  ; state.jz          ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.630      ; 3.422      ;
; 1.808  ; state.decodificar ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.583      ; 3.391      ;
; 1.848  ; state.xorr        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.723      ; 3.571      ;
; 1.851  ; state.xorr        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.834      ; 3.685      ;
; 1.854  ; state.xorr        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.835      ; 3.689      ;
; 1.855  ; state.ret         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.503      ; 3.358      ;
; 1.866  ; state.mbh         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.630      ; 3.496      ;
; 1.878  ; state.sub         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.723      ; 3.601      ;
; 1.881  ; state.sub         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.834      ; 3.715      ;
; 1.884  ; state.sub         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 1.835      ; 3.719      ;
; 1.914  ; state.MOVS        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.436      ; 3.350      ;
; 1.916  ; state.MOVS        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.436      ; 3.352      ;
; 1.924  ; state.jma         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 1.503      ; 3.427      ;
; 2.021  ; state.mbl         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.630      ; 3.651      ;
; 2.043  ; state.orr         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.612      ;
; 2.043  ; state.orr         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.612      ;
; 2.059  ; state.orr         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.674      ; 3.733      ;
; 2.162  ; state.xorr        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.731      ;
; 2.162  ; state.xorr        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.731      ;
; 2.178  ; state.xorr        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.674      ; 3.852      ;
; 2.192  ; state.sub         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.761      ;
; 2.192  ; state.sub         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.569      ; 3.761      ;
; 2.208  ; state.sub         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 1.674      ; 3.882      ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node           ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; -1.529 ; state.initial     ; state.busca       ; state.initial ; clk         ; 0.000        ; 2.826      ; 1.879      ;
; -1.029 ; state.initial     ; state.busca       ; state.initial ; clk         ; -0.500       ; 2.826      ; 1.879      ;
; 1.075  ; state.busca       ; state.decodificar ; clk           ; clk         ; 0.000        ; 0.009      ; 1.380      ;
; 1.285  ; state.busca       ; state.busca       ; clk           ; clk         ; 0.000        ; 0.000      ; 1.581      ;
; 1.347  ; state.decodificar ; state.sltu        ; clk           ; clk         ; 0.000        ; 0.000      ; 1.643      ;
; 1.571  ; state.decodificar ; state.MOV         ; clk           ; clk         ; 0.000        ; -0.241     ; 1.626      ;
; 1.574  ; state.decodificar ; state.add         ; clk           ; clk         ; 0.000        ; -0.241     ; 1.629      ;
; 1.587  ; state.decodificar ; state.nop         ; clk           ; clk         ; 0.000        ; -0.009     ; 1.874      ;
; 1.673  ; state.decodificar ; state.busca       ; clk           ; clk         ; 0.000        ; -0.009     ; 1.960      ;
; 1.689  ; state.decodificar ; state.sub         ; clk           ; clk         ; 0.000        ; -0.053     ; 1.932      ;
; 1.690  ; state.decodificar ; state.slt         ; clk           ; clk         ; 0.000        ; -0.053     ; 1.933      ;
; 1.693  ; state.decodificar ; state.andd        ; clk           ; clk         ; 0.000        ; -0.053     ; 1.936      ;
; 1.694  ; state.decodificar ; state.orr         ; clk           ; clk         ; 0.000        ; -0.053     ; 1.937      ;
; 1.694  ; state.decodificar ; state.xorr        ; clk           ; clk         ; 0.000        ; -0.053     ; 1.937      ;
; 1.732  ; state.decodificar ; state.sw          ; clk           ; clk         ; 0.000        ; -0.053     ; 1.975      ;
; 1.733  ; state.decodificar ; state.lw          ; clk           ; clk         ; 0.000        ; -0.053     ; 1.976      ;
; 1.767  ; state.decodificar ; state.mbl         ; clk           ; clk         ; 0.000        ; -0.009     ; 2.054      ;
; 1.768  ; state.decodificar ; state.jz          ; clk           ; clk         ; 0.000        ; -0.009     ; 2.055      ;
; 1.770  ; state.decodificar ; state.mbh         ; clk           ; clk         ; 0.000        ; -0.009     ; 2.057      ;
; 1.781  ; state.decodificar ; state.jma         ; clk           ; clk         ; 0.000        ; 0.080      ; 2.157      ;
; 1.808  ; state.decodificar ; state.ret         ; clk           ; clk         ; 0.000        ; 0.080      ; 2.184      ;
; 1.808  ; state.decodificar ; state.MOVS        ; clk           ; clk         ; 0.000        ; 0.080      ; 2.184      ;
; 1.893  ; state.decodificar ; state.jme         ; clk           ; clk         ; 0.000        ; -0.009     ; 2.180      ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; clk   ; Rise       ; clk                   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.MOV             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.MOV             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.MOVS            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.MOVS            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.add             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.add             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.andd            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.andd            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.busca           ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.busca           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.decodificar     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.decodificar     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.initial         ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.initial         ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.jma             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.jma             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.jme             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.jme             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.jz              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.jz              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.lw              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.lw              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.mbh             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.mbh             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.mbl             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.mbl             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.nop             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.nop             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.orr             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.orr             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.ret             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.ret             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.slt             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.slt             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.sltu            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.sltu            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.sub             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.sub             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.sw              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.sw              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clk   ; Rise       ; state.xorr            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clk   ; Rise       ; state.xorr            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.MOVS|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOVS|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.MOV|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOV|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.add|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.add|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.andd|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.andd|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.busca|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.busca|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.decodificar|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.decodificar|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.initial|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.initial|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jma|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jma|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jme|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jme|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jz|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jz|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.lw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.lw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.mbh|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbh|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.mbl|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbl|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.nop|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.nop|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.orr|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.orr|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.ret|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.ret|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sltu|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sltu|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.slt|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.slt|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sub|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sub|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.xorr|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.xorr|clk        ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'out_comparador[0]'                                                                       ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock             ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; out_comparador[0] ; Rise       ; out_comparador[0]            ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|inclk[0] ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|inclk[0] ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|outclk   ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|outclk   ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|combout         ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|combout         ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[0]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[0]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[0]$latch|datad    ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[0]$latch|datad    ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[1]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[1]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[1]$latch|datad    ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[1]$latch|datad    ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[2]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[2]$latch          ;
; 0.442  ; 0.442        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[2]$latch|datad    ;
; 0.442  ; 0.442        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[2]$latch|datad    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~1|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~1|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~1|datab           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~1|datab           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|dataa           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|dataa           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector9~2|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector9~2|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector9~2|dataa            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector9~2|dataa            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[0]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[0]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[0]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[0]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[1]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[1]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[1]|datab                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[1]|datab                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[2]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[2]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[2]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[2]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[3]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[3]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[3]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[3]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[4]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[4]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[4]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[4]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[5]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[5]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[5]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[5]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[6]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[6]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[6]|datac                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[6]|datac                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R0$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R0$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R0$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R0$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R1$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R1$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R1$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R1$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R2$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R2$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R2$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R2$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R3$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R3$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R3$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R3$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R4$latch                  ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'state.MOV'                                                                    ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock     ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector47~0|combout       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector47~0|combout       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; Selector47~0|datad         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; Selector47~0|datad         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~1|combout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~1|combout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; Selector9~1|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; Selector9~1|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~2|combout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~2|combout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~2|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~2|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22|dataa             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22|dataa             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22~clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22~clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22~clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22~clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; WideOr24~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; WideOr24~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr7|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr7|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; WideOr7|datab              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; WideOr7|datab              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RE$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RE$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; ld_RE$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; ld_RE$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RI$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RI$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RI$latch|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RI$latch|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[0]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[0]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[0]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[0]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; state.MOV|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; state.MOV|regout           ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'state.add'                                                                    ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock     ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr12~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr12~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr12~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr12~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr23~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr23~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr27~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr27~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr5~4|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr5~4|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~4|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~4|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~5|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~5|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~5|datad            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~5|datad            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; ld_PC$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; ld_PC$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; ld_PC$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; ld_PC$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; ld_RS$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; ld_RS$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; ld_RS$latch|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; ld_RS$latch|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; pc_increment$latch         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; pc_increment$latch         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; pc_increment$latch|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; pc_increment$latch|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; selmux3$latch              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; selmux3$latch              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; selmux3$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; selmux3$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; state.add|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; state.add|regout           ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'state.initial'                                                                      ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock         ; Clock Edge ; Target                       ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; Selector14~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; Selector14~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector14~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector14~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; Selector37~2|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; Selector37~2|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideNor0~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideNor0~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideNor0~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideNor0~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr12~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr12~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr12~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr12~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr14~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr14~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr14~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr14~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr27~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr27~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr30|combout             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr30|combout             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr30|datac               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr30|datac               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr5~4|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr5~4|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~4|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~4|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~5|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~5|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~5|dataa              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~5|dataa              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[0]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[0]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[0]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[0]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[1]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[1]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[1]|datab                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[1]|datab                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[2]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[2]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[2]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[2]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[3]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[3]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[3]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[3]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[4]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[4]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[4]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[4]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[5]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[5]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[5]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[5]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[6]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[6]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[6]|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[6]|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_MemDados$latch            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_MemDados$latch            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_MemDados$latch|datac      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_MemDados$latch|datac      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_PC$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_PC$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_PC$latch|datab            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_PC$latch|datab            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_RP$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_RP$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_RP$latch|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_RP$latch|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_RS$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_RS$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_RS$latch|datac            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_RS$latch|datac            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; pc_increment$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; pc_increment$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; pc_increment$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; pc_increment$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; sel_ULA[0]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; sel_ULA[0]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; sel_ULA[0]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; sel_ULA[0]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; sel_ULA[1]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; sel_ULA[1]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; sel_ULA[1]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; sel_ULA[1]$latch|datac       ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+


+-------------------------------------------------------------------------------------------+
; Setup Times                                                                               ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; 6.826  ; 6.826  ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; 4.974  ; 4.974  ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; 6.549  ; 6.549  ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; 6.826  ; 6.826  ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; 6.060  ; 6.060  ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; 6.029  ; 6.029  ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 6.180  ; 6.180  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 1.273  ; 1.273  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; 6.180  ; 6.180  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 7.350  ; 7.350  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; 6.793  ; 6.793  ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; 6.219  ; 6.219  ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; 6.045  ; 6.045  ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 2.425  ; 2.425  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; 7.350  ; 7.350  ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; 7.031  ; 7.031  ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; 5.751  ; 5.751  ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 1.383  ; 1.383  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 1.277  ; 1.277  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 4.828  ; 4.828  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; -0.058 ; -0.058 ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; 4.828  ; 4.828  ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; 4.511  ; 4.511  ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; 4.461  ; 4.461  ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; 0.161  ; 0.161  ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; -0.181 ; -0.181 ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 5.594  ; 5.594  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 0.687  ; 0.687  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; 5.594  ; 5.594  ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 6.764  ; 6.764  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; 6.207  ; 6.207  ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; 5.633  ; 5.633  ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; 5.459  ; 5.459  ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 1.839  ; 1.839  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; 6.764  ; 6.764  ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; 6.445  ; 6.445  ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; 5.165  ; 5.165  ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 0.797  ; 0.797  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 0.691  ; 0.691  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+-------------------------------------------------------------------------------------------+
; Hold Times                                                                                ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; -4.026 ; -4.026 ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; -4.026 ; -4.026 ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; -4.133 ; -4.133 ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; -4.151 ; -4.151 ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; -4.171 ; -4.171 ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; -4.740 ; -4.740 ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 0.880  ; 0.880  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 0.880  ; 0.880  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; -4.027 ; -4.027 ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 2.608  ; 2.608  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; -4.002 ; -4.002 ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; -3.954 ; -3.954 ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; -4.010 ; -4.010 ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 1.139  ; 1.139  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; -3.532 ; -3.532 ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; -3.091 ; -3.091 ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; -2.268 ; -2.268 ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 2.587  ; 2.587  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 2.608  ; 2.608  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 1.500  ; 1.500  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; 1.477  ; 1.477  ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; -3.415 ; -3.415 ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; -3.146 ; -3.146 ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; -2.987 ; -2.987 ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; 1.228  ; 1.228  ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; 1.500  ; 1.500  ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 1.466  ; 1.466  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 1.466  ; 1.466  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; -3.441 ; -3.441 ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 1.986  ; 1.986  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; -3.416 ; -3.416 ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; -3.368 ; -3.368 ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; -3.424 ; -3.424 ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 1.725  ; 1.725  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; -2.946 ; -2.946 ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; -2.505 ; -2.505 ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; -3.359 ; -3.359 ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 1.986  ; 1.986  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 1.629  ; 1.629  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+---------------------------------------------------------------------------------------+
; Clock to Output Times                                                                 ;
+----------------+-------------------+--------+--------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+--------+--------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 10.473 ; 10.473 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 10.330 ; 10.330 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 10.481 ; 10.481 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 10.333 ; 10.333 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 10.322 ; 10.322 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 10.362 ; 10.362 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 10.845 ; 10.845 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 10.312 ; 10.312 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 10.465 ; 10.465 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 10.699 ; 10.699 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 10.340 ; 10.340 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 10.319 ; 10.319 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 10.699 ; 10.699 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 8.402  ; 8.402  ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 8.386  ; 8.386  ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 9.212  ; 9.212  ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 9.212  ; 9.212  ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 8.739  ; 8.739  ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 8.881  ; 8.881  ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 8.800  ; 8.800  ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 8.632  ; 8.632  ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 8.628  ; 8.628  ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 8.800  ; 8.800  ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 9.037  ; 9.037  ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 9.021  ; 9.021  ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 9.082  ; 9.082  ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 9.653  ; 9.653  ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 9.653  ; 9.653  ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 9.305  ; 9.305  ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 9.290  ; 9.290  ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 9.030  ; 9.030  ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 9.322  ; 9.322  ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 9.374  ; 9.374  ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 9.065  ; 9.065  ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 9.470  ; 9.470  ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 9.215  ; 9.215  ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 9.888  ; 9.888  ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 9.888  ; 9.888  ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 9.540  ; 9.540  ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 9.525  ; 9.525  ; Rise       ; state.initial     ;
+----------------+-------------------+--------+--------+------------+-------------------+


+---------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                         ;
+----------------+-------------------+--------+--------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+--------+--------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 10.473 ; 10.473 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 10.330 ; 10.330 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 10.481 ; 10.481 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 10.333 ; 10.333 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 10.322 ; 10.322 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 10.362 ; 10.362 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 10.845 ; 10.845 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 10.312 ; 10.312 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 10.465 ; 10.465 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 10.261 ; 10.261 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 10.282 ; 10.282 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 10.261 ; 10.261 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 10.641 ; 10.641 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 8.402  ; 8.402  ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 8.386  ; 8.386  ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 8.739  ; 8.739  ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 9.212  ; 9.212  ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 8.739  ; 8.739  ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 8.881  ; 8.881  ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 8.628  ; 8.628  ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 8.632  ; 8.632  ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 8.628  ; 8.628  ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 8.800  ; 8.800  ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 9.037  ; 9.037  ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 9.021  ; 9.021  ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 9.082  ; 9.082  ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 9.290  ; 9.290  ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 9.653  ; 9.653  ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 9.305  ; 9.305  ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 9.290  ; 9.290  ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 9.030  ; 9.030  ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 9.322  ; 9.322  ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 9.374  ; 9.374  ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 9.065  ; 9.065  ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 9.470  ; 9.470  ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 9.215  ; 9.215  ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 9.525  ; 9.525  ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 9.888  ; 9.888  ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 9.540  ; 9.540  ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 9.525  ; 9.525  ; Rise       ; state.initial     ;
+----------------+-------------------+--------+--------+------------+-------------------+


+--------------------------------------------+
; Fast Model Setup Summary                   ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; out_comparador[0] ; -0.892 ; -5.139        ;
; state.initial     ; -0.870 ; -4.917        ;
; state.MOV         ; -0.406 ; -0.977        ;
; state.add         ; -0.114 ; -0.201        ;
; clk               ; 0.152  ; 0.000         ;
+-------------------+--------+---------------+


+--------------------------------------------+
; Fast Model Hold Summary                    ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; out_comparador[0] ; -2.042 ; -21.977       ;
; state.initial     ; -1.504 ; -9.823        ;
; state.add         ; -1.201 ; -1.201        ;
; clk               ; -0.842 ; -0.842        ;
; state.MOV         ; -0.773 ; -4.850        ;
+-------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+--------------------------------------------+
; Fast Model Minimum Pulse Width Summary     ;
+-------------------+--------+---------------+
; Clock             ; Slack  ; End Point TNS ;
+-------------------+--------+---------------+
; clk               ; -1.380 ; -22.380       ;
; out_comparador[0] ; -1.222 ; -1.222        ;
; state.MOV         ; 0.500  ; 0.000         ;
; state.add         ; 0.500  ; 0.000         ;
; state.initial     ; 0.500  ; 0.000         ;
+-------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'out_comparador[0]'                                                                                ;
+--------+-------------------+-------------+--------------+-------------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node     ; Launch Clock ; Latch Clock       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------+--------------+-------------------+--------------+------------+------------+
; -0.892 ; state.ret         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.824      ; 1.635      ;
; -0.862 ; state.lw          ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.872      ; 1.653      ;
; -0.860 ; state.sw          ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.872      ; 1.651      ;
; -0.853 ; state.mbh         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.642      ;
; -0.852 ; state.jma         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.824      ; 1.595      ;
; -0.799 ; state.decodificar ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.866      ; 1.584      ;
; -0.797 ; state.ret         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.673      ;
; -0.783 ; state.mbl         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.572      ;
; -0.779 ; state.MOVS        ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.824      ; 1.522      ;
; -0.771 ; state.lw          ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.754      ; 1.695      ;
; -0.765 ; state.sw          ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.754      ; 1.689      ;
; -0.762 ; state.mbh         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.684      ;
; -0.757 ; state.jma         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.633      ;
; -0.744 ; state.jz          ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.533      ;
; -0.730 ; state.jme         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.519      ;
; -0.718 ; state.ret         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.755      ; 1.598      ;
; -0.704 ; state.decodificar ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.748      ; 1.622      ;
; -0.692 ; state.mbl         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.614      ;
; -0.692 ; state.lw          ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.803      ; 1.620      ;
; -0.686 ; state.sw          ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.803      ; 1.614      ;
; -0.684 ; state.MOVS        ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.560      ;
; -0.683 ; state.ret         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.564      ;
; -0.683 ; state.mbh         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.609      ;
; -0.678 ; state.jma         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.755      ; 1.558      ;
; -0.667 ; state.ret         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.845      ; 1.675      ;
; -0.662 ; state.ret         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.671      ;
; -0.662 ; state.sltu        ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.866      ; 1.447      ;
; -0.653 ; state.lw          ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.754      ; 1.582      ;
; -0.652 ; state.ret         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.661      ;
; -0.652 ; state.busca       ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.441      ;
; -0.651 ; state.sw          ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.754      ; 1.580      ;
; -0.649 ; state.jz          ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.571      ;
; -0.644 ; state.mbh         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.571      ;
; -0.643 ; state.jma         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.524      ;
; -0.637 ; state.lw          ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.893      ; 1.693      ;
; -0.636 ; state.lw          ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.894      ; 1.693      ;
; -0.635 ; state.jme         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.557      ;
; -0.635 ; state.sw          ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.893      ; 1.691      ;
; -0.630 ; state.sw          ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.894      ; 1.687      ;
; -0.628 ; state.mbh         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.682      ;
; -0.627 ; state.jma         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.845      ; 1.635      ;
; -0.627 ; state.mbh         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.682      ;
; -0.626 ; state.lw          ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.894      ; 1.683      ;
; -0.625 ; state.decodificar ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.797      ; 1.547      ;
; -0.622 ; state.jma         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.631      ;
; -0.620 ; state.sw          ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.894      ; 1.677      ;
; -0.617 ; state.mbh         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.672      ;
; -0.613 ; state.mbl         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.539      ;
; -0.612 ; state.jma         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.621      ;
; -0.608 ; state.nop         ; bau[1]      ; clk          ; out_comparador[0] ; 0.500        ; 0.870      ; 1.397      ;
; -0.605 ; state.MOVS        ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.755      ; 1.485      ;
; -0.590 ; state.decodificar ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.748      ; 1.513      ;
; -0.577 ; state.sltu        ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.748      ; 1.495      ;
; -0.574 ; state.decodificar ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.887      ; 1.624      ;
; -0.574 ; state.mbl         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.501      ;
; -0.570 ; state.jz          ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.496      ;
; -0.570 ; state.MOVS        ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.706      ; 1.451      ;
; -0.569 ; state.decodificar ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.888      ; 1.620      ;
; -0.559 ; state.decodificar ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.888      ; 1.610      ;
; -0.558 ; state.mbl         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.612      ;
; -0.557 ; state.busca       ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.479      ;
; -0.557 ; state.mbl         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.612      ;
; -0.556 ; state.jme         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.482      ;
; -0.554 ; state.MOVS        ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.845      ; 1.562      ;
; -0.549 ; state.MOVS        ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.558      ;
; -0.547 ; state.mbl         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.602      ;
; -0.540 ; state.sltu        ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.748      ; 1.463      ;
; -0.539 ; state.MOVS        ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.846      ; 1.548      ;
; -0.535 ; state.jz          ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.462      ;
; -0.521 ; state.jme         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.448      ;
; -0.519 ; state.jz          ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.573      ;
; -0.514 ; state.jz          ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.569      ;
; -0.513 ; state.nop         ; bau[4]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.435      ;
; -0.505 ; state.jme         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.559      ;
; -0.504 ; state.jz          ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.559      ;
; -0.500 ; state.jme         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.555      ;
; -0.498 ; state.sltu        ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.797      ; 1.420      ;
; -0.490 ; state.jme         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.545      ;
; -0.478 ; state.busca       ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.404      ;
; -0.443 ; state.busca       ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.370      ;
; -0.442 ; state.sltu        ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.888      ; 1.493      ;
; -0.437 ; state.sltu        ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.887      ; 1.487      ;
; -0.434 ; state.nop         ; bau[6]      ; clk          ; out_comparador[0] ; 0.500        ; 0.801      ; 1.360      ;
; -0.432 ; state.sltu        ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.888      ; 1.483      ;
; -0.427 ; state.busca       ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.481      ;
; -0.422 ; state.busca       ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.477      ;
; -0.412 ; state.busca       ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.467      ;
; -0.399 ; state.nop         ; bau[5]      ; clk          ; out_comparador[0] ; 0.500        ; 0.752      ; 1.326      ;
; -0.383 ; state.nop         ; bau[3]      ; clk          ; out_comparador[0] ; 0.500        ; 0.891      ; 1.437      ;
; -0.378 ; state.nop         ; bau[0]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.433      ;
; -0.368 ; state.nop         ; bau[2]      ; clk          ; out_comparador[0] ; 0.500        ; 0.892      ; 1.423      ;
; -0.068 ; state.jma         ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.048      ; 1.242      ;
; -0.047 ; state.ret         ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.048      ; 1.221      ;
; 0.001  ; state.decodificar ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.090      ; 1.215      ;
; 0.127  ; state.sub         ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.096      ; 1.095      ;
; 0.141  ; state.xorr        ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.096      ; 1.081      ;
; 0.148  ; state.busca       ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.094      ; 1.072      ;
; 0.196  ; state.decodificar ; ld_R4$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.300      ; 1.229      ;
; 0.196  ; state.decodificar ; ld_R5$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.299      ; 1.228      ;
; 0.205  ; state.orr         ; ld_RE$latch ; clk          ; out_comparador[0] ; 0.500        ; 1.096      ; 1.017      ;
+--------+-------------------+-------------+--------------+-------------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'state.initial'                                                                                     ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node     ; Launch Clock      ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+
; -0.870 ; state.ret         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.846      ; 1.635      ;
; -0.840 ; state.lw          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.894      ; 1.653      ;
; -0.838 ; state.sw          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.894      ; 1.651      ;
; -0.831 ; state.mbh         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.642      ;
; -0.830 ; state.jma         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.846      ; 1.595      ;
; -0.777 ; state.decodificar ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.888      ; 1.584      ;
; -0.775 ; state.ret         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.673      ;
; -0.761 ; state.mbl         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.572      ;
; -0.757 ; state.MOVS        ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.846      ; 1.522      ;
; -0.749 ; state.lw          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.776      ; 1.695      ;
; -0.743 ; state.sw          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.776      ; 1.689      ;
; -0.740 ; state.mbh         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.684      ;
; -0.735 ; state.jma         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.633      ;
; -0.722 ; state.jz          ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.533      ;
; -0.708 ; state.jme         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.519      ;
; -0.696 ; state.ret         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.777      ; 1.598      ;
; -0.682 ; state.decodificar ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.770      ; 1.622      ;
; -0.670 ; state.mbl         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.614      ;
; -0.670 ; state.lw          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.825      ; 1.620      ;
; -0.664 ; state.sw          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.825      ; 1.614      ;
; -0.662 ; state.MOVS        ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.560      ;
; -0.661 ; state.ret         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.564      ;
; -0.661 ; state.mbh         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.609      ;
; -0.656 ; state.jma         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.777      ; 1.558      ;
; -0.645 ; state.ret         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.867      ; 1.675      ;
; -0.640 ; state.ret         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.671      ;
; -0.640 ; state.sltu        ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.888      ; 1.447      ;
; -0.631 ; state.lw          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.776      ; 1.582      ;
; -0.630 ; state.ret         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.661      ;
; -0.630 ; state.busca       ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.441      ;
; -0.629 ; state.sw          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.776      ; 1.580      ;
; -0.627 ; state.jz          ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.571      ;
; -0.622 ; state.mbh         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.571      ;
; -0.621 ; state.jma         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.524      ;
; -0.615 ; state.lw          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.915      ; 1.693      ;
; -0.614 ; state.lw          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.916      ; 1.693      ;
; -0.613 ; state.jme         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.557      ;
; -0.613 ; state.sw          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.915      ; 1.691      ;
; -0.608 ; state.sw          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.916      ; 1.687      ;
; -0.606 ; state.mbh         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.682      ;
; -0.605 ; state.jma         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.867      ; 1.635      ;
; -0.605 ; state.mbh         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.682      ;
; -0.604 ; state.lw          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.916      ; 1.683      ;
; -0.603 ; state.decodificar ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.819      ; 1.547      ;
; -0.600 ; state.jma         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.631      ;
; -0.598 ; state.sw          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.916      ; 1.677      ;
; -0.595 ; state.mbh         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.672      ;
; -0.591 ; state.mbl         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.539      ;
; -0.590 ; state.jma         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.621      ;
; -0.586 ; state.nop         ; bau[1]      ; clk               ; state.initial ; 0.500        ; 0.892      ; 1.397      ;
; -0.583 ; state.MOVS        ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.777      ; 1.485      ;
; -0.568 ; state.decodificar ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.770      ; 1.513      ;
; -0.555 ; state.sltu        ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.770      ; 1.495      ;
; -0.552 ; state.decodificar ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.909      ; 1.624      ;
; -0.552 ; state.mbl         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.501      ;
; -0.548 ; state.jz          ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.496      ;
; -0.548 ; state.MOVS        ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.728      ; 1.451      ;
; -0.547 ; state.decodificar ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.910      ; 1.620      ;
; -0.537 ; state.decodificar ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.910      ; 1.610      ;
; -0.536 ; state.mbl         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.612      ;
; -0.535 ; state.busca       ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.479      ;
; -0.535 ; state.mbl         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.612      ;
; -0.534 ; state.jme         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.482      ;
; -0.532 ; state.MOVS        ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.867      ; 1.562      ;
; -0.527 ; state.MOVS        ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.558      ;
; -0.525 ; state.mbl         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.602      ;
; -0.518 ; state.sltu        ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.770      ; 1.463      ;
; -0.517 ; state.MOVS        ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.868      ; 1.548      ;
; -0.513 ; state.jz          ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.462      ;
; -0.499 ; state.jme         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.448      ;
; -0.497 ; state.jz          ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.573      ;
; -0.492 ; state.jz          ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.569      ;
; -0.491 ; state.nop         ; bau[4]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.435      ;
; -0.483 ; state.jme         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.559      ;
; -0.482 ; state.jz          ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.559      ;
; -0.478 ; state.jme         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.555      ;
; -0.476 ; state.sltu        ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.819      ; 1.420      ;
; -0.468 ; state.jme         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.545      ;
; -0.456 ; state.busca       ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.404      ;
; -0.421 ; state.busca       ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.370      ;
; -0.420 ; state.sltu        ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.910      ; 1.493      ;
; -0.415 ; state.sltu        ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.909      ; 1.487      ;
; -0.412 ; state.nop         ; bau[6]      ; clk               ; state.initial ; 0.500        ; 0.823      ; 1.360      ;
; -0.410 ; state.sltu        ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.910      ; 1.483      ;
; -0.405 ; state.busca       ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.481      ;
; -0.400 ; state.busca       ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.477      ;
; -0.390 ; state.busca       ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.467      ;
; -0.377 ; state.nop         ; bau[5]      ; clk               ; state.initial ; 0.500        ; 0.774      ; 1.326      ;
; -0.361 ; state.nop         ; bau[3]      ; clk               ; state.initial ; 0.500        ; 0.913      ; 1.437      ;
; -0.356 ; state.nop         ; bau[0]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.433      ;
; -0.346 ; state.nop         ; bau[2]      ; clk               ; state.initial ; 0.500        ; 0.914      ; 1.423      ;
; 0.347  ; out_comparador[0] ; bau[1]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.136      ; 1.708      ;
; 0.432  ; out_comparador[0] ; bau[4]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.018      ; 1.756      ;
; 0.469  ; out_comparador[0] ; bau[5]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.018      ; 1.724      ;
; 0.511  ; out_comparador[0] ; bau[6]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.067      ; 1.681      ;
; 0.531  ; state.jma         ; ld_PC$latch ; clk               ; state.initial ; 1.000        ; 0.530      ; 0.625      ;
; 0.567  ; out_comparador[0] ; bau[0]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.158      ; 1.754      ;
; 0.572  ; out_comparador[0] ; bau[3]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.157      ; 1.748      ;
; 0.577  ; out_comparador[0] ; bau[2]      ; out_comparador[0] ; state.initial ; 0.500        ; 2.158      ; 1.744      ;
; 0.605  ; state.ret         ; ld_PC$latch ; clk               ; state.initial ; 1.000        ; 0.530      ; 0.551      ;
+--------+-------------------+-------------+-------------------+---------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'state.MOV'                                                                                           ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; -0.406 ; state.jma         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.210      ; 1.242      ;
; -0.385 ; state.ret         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.210      ; 1.221      ;
; -0.337 ; state.decodificar ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.252      ; 1.215      ;
; -0.211 ; state.sub         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.258      ; 1.095      ;
; -0.197 ; state.xorr        ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.258      ; 1.081      ;
; -0.190 ; state.busca       ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.256      ; 1.072      ;
; -0.133 ; state.orr         ; ld_RE$latch         ; clk           ; state.MOV   ; 1.000        ; 0.258      ; 1.017      ;
; -0.123 ; state.sub         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.567      ; 1.353      ;
; -0.109 ; state.xorr        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.567      ; 1.339      ;
; -0.103 ; state.busca       ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 0.161      ; 0.886      ;
; -0.102 ; state.mbl         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 0.161      ; 0.885      ;
; -0.095 ; state.sub         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.314      ;
; -0.084 ; state.sub         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.315      ;
; -0.081 ; state.xorr        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.300      ;
; -0.070 ; state.xorr        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.301      ;
; -0.068 ; state.sub         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.617      ; 1.301      ;
; -0.066 ; state.sub         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.618      ; 1.301      ;
; -0.056 ; state.mbh         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 0.161      ; 0.839      ;
; -0.054 ; state.xorr        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.617      ; 1.287      ;
; -0.052 ; state.xorr        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.618      ; 1.287      ;
; -0.045 ; state.orr         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.567      ; 1.275      ;
; -0.039 ; state.MOVS        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.516      ; 1.210      ;
; -0.032 ; state.sub         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.610      ; 1.265      ;
; -0.028 ; state.MOVS        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.516      ; 1.211      ;
; -0.018 ; state.xorr        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.610      ; 1.251      ;
; -0.017 ; state.orr         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.236      ;
; -0.012 ; state.mbl         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.565      ; 1.240      ;
; -0.006 ; state.orr         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.237      ;
; 0.010  ; state.orr         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.617      ; 1.223      ;
; 0.012  ; state.orr         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.618      ; 1.223      ;
; 0.024  ; state.MOVS        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.562      ; 1.161      ;
; 0.034  ; state.mbh         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.565      ; 1.194      ;
; 0.040  ; state.jma         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 0.115      ; 0.697      ;
; 0.043  ; state.mbl         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.615      ; 1.188      ;
; 0.045  ; state.mbl         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.616      ; 1.188      ;
; 0.046  ; state.orr         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.610      ; 1.187      ;
; 0.049  ; state.slt         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.567      ; 1.181      ;
; 0.050  ; state.jz          ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.565      ; 1.178      ;
; 0.054  ; state.sltu        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.558      ; 1.159      ;
; 0.065  ; state.sltu        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.558      ; 1.160      ;
; 0.080  ; state.sltu        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.561      ; 1.144      ;
; 0.089  ; state.mbh         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.615      ; 1.142      ;
; 0.091  ; state.mbh         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.616      ; 1.142      ;
; 0.095  ; state.slt         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.124      ;
; 0.100  ; state.jme         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.565      ; 1.128      ;
; 0.104  ; state.slt         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.617      ; 1.129      ;
; 0.105  ; state.jz          ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.615      ; 1.126      ;
; 0.106  ; state.slt         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 1.125      ;
; 0.106  ; state.slt         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.618      ; 1.129      ;
; 0.107  ; state.jz          ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.616      ; 1.126      ;
; 0.113  ; state.ret         ; ld_RI$latch         ; clk           ; state.MOV   ; 1.000        ; 0.115      ; 0.624      ;
; 0.117  ; state.andd        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.567      ; 1.113      ;
; 0.117  ; state.sltu        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.604      ; 1.110      ;
; 0.135  ; state.sltu        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.611      ; 1.092      ;
; 0.137  ; state.sltu        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.612      ; 1.092      ;
; 0.155  ; state.jme         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.615      ; 1.076      ;
; 0.157  ; state.jme         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.616      ; 1.076      ;
; 0.158  ; state.slt         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.610      ; 1.075      ;
; 0.172  ; state.andd        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.617      ; 1.061      ;
; 0.174  ; state.andd        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.618      ; 1.061      ;
; 0.243  ; state.andd        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 0.976      ;
; 0.254  ; state.andd        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 1.000        ; 0.564      ; 0.977      ;
; 0.306  ; state.andd        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 1.000        ; 0.610      ; 0.927      ;
; 0.572  ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 0.500        ; 1.500      ; 1.189      ;
; 0.717  ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 0.500        ; 1.500      ; 1.044      ;
; 0.805  ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.809      ; 1.302      ;
; 0.833  ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.806      ; 1.263      ;
; 0.844  ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.806      ; 1.264      ;
; 0.860  ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.859      ; 1.250      ;
; 0.862  ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.860      ; 1.250      ;
; 0.896  ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 0.500        ; 1.852      ; 1.214      ;
; 1.072  ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 1.000        ; 1.500      ; 1.189      ;
; 1.217  ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 1.000        ; 1.500      ; 1.044      ;
; 1.305  ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.809      ; 1.302      ;
; 1.333  ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.806      ; 1.263      ;
; 1.344  ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.806      ; 1.264      ;
; 1.360  ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.859      ; 1.250      ;
; 1.362  ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.860      ; 1.250      ;
; 1.396  ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 1.000        ; 1.852      ; 1.214      ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'state.add'                                                                                   ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node   ; To Node            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; -0.114 ; state.jma   ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 0.385      ; 0.625      ;
; -0.087 ; state.sub   ; selmux3$latch      ; clk          ; state.add   ; 0.500        ; 0.373      ; 0.577      ;
; -0.040 ; state.ret   ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 0.385      ; 0.551      ;
; -0.016 ; state.busca ; ld_PC$latch        ; clk          ; state.add   ; 0.500        ; 0.431      ; 0.573      ;
; 0.029  ; state.busca ; pc_increment$latch ; clk          ; state.add   ; 0.500        ; 0.432      ; 0.530      ;
; 0.135  ; state.MOVS  ; ld_RS$latch        ; clk          ; state.add   ; 0.500        ; 0.365      ; 0.350      ;
; 0.263  ; state.sub   ; sel_ULA[0]$latch   ; clk          ; state.add   ; 0.500        ; 0.799      ; 0.662      ;
; 0.303  ; state.orr   ; sel_ULA[1]$latch   ; clk          ; state.add   ; 0.500        ; 0.799      ; 0.625      ;
; 0.303  ; state.orr   ; sel_ULA[0]$latch   ; clk          ; state.add   ; 0.500        ; 0.799      ; 0.622      ;
; 0.336  ; state.andd  ; sel_ULA[1]$latch   ; clk          ; state.add   ; 0.500        ; 0.799      ; 0.592      ;
; 0.579  ; state.xorr  ; sel_ULA[2]$latch   ; clk          ; state.add   ; 0.500        ; 0.792      ; 0.341      ;
; 1.318  ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 0.500        ; 1.615      ; 0.549      ;
; 1.818  ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 1.000        ; 1.615      ; 0.549      ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                              ;
+-------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; Slack ; From Node         ; To Node           ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; 0.152 ; state.decodificar ; state.busca       ; clk           ; clk         ; 1.000        ; -0.004     ; 0.874      ;
; 0.192 ; state.decodificar ; state.jme         ; clk           ; clk         ; 1.000        ; -0.004     ; 0.834      ;
; 0.231 ; state.decodificar ; state.jz          ; clk           ; clk         ; 1.000        ; -0.004     ; 0.795      ;
; 0.232 ; state.decodificar ; state.mbh         ; clk           ; clk         ; 1.000        ; -0.004     ; 0.794      ;
; 0.233 ; state.decodificar ; state.mbl         ; clk           ; clk         ; 1.000        ; -0.004     ; 0.793      ;
; 0.254 ; state.decodificar ; state.lw          ; clk           ; clk         ; 1.000        ; -0.006     ; 0.770      ;
; 0.255 ; state.decodificar ; state.sw          ; clk           ; clk         ; 1.000        ; -0.006     ; 0.769      ;
; 0.259 ; state.decodificar ; state.MOVS        ; clk           ; clk         ; 1.000        ; 0.042      ; 0.813      ;
; 0.260 ; state.decodificar ; state.ret         ; clk           ; clk         ; 1.000        ; 0.042      ; 0.812      ;
; 0.274 ; state.decodificar ; state.jma         ; clk           ; clk         ; 1.000        ; 0.042      ; 0.798      ;
; 0.288 ; state.decodificar ; state.orr         ; clk           ; clk         ; 1.000        ; -0.006     ; 0.736      ;
; 0.288 ; state.decodificar ; state.xorr        ; clk           ; clk         ; 1.000        ; -0.006     ; 0.736      ;
; 0.289 ; state.decodificar ; state.slt         ; clk           ; clk         ; 1.000        ; -0.006     ; 0.735      ;
; 0.290 ; state.decodificar ; state.andd        ; clk           ; clk         ; 1.000        ; -0.006     ; 0.734      ;
; 0.294 ; state.decodificar ; state.sub         ; clk           ; clk         ; 1.000        ; -0.006     ; 0.730      ;
; 0.321 ; state.decodificar ; state.nop         ; clk           ; clk         ; 1.000        ; -0.004     ; 0.705      ;
; 0.399 ; state.decodificar ; state.sltu        ; clk           ; clk         ; 1.000        ; 0.000      ; 0.631      ;
; 0.432 ; state.busca       ; state.busca       ; clk           ; clk         ; 1.000        ; 0.000      ; 0.598      ;
; 0.475 ; state.busca       ; state.decodificar ; clk           ; clk         ; 1.000        ; 0.004      ; 0.559      ;
; 0.509 ; state.decodificar ; state.add         ; clk           ; clk         ; 1.000        ; 0.102      ; 0.623      ;
; 0.510 ; state.decodificar ; state.MOV         ; clk           ; clk         ; 1.000        ; 0.102      ; 0.622      ;
; 1.194 ; state.initial     ; state.busca       ; state.initial ; clk         ; 0.500        ; 1.244      ; 0.715      ;
; 1.694 ; state.initial     ; state.busca       ; state.initial ; clk         ; 1.000        ; 1.244      ; 0.715      ;
+-------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'out_comparador[0]'                                                                                              ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock      ; Latch Clock       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+
; -2.042 ; state.initial     ; ld_RP$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.293      ; 0.386      ;
; -1.668 ; state.initial     ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.607      ; 1.074      ;
; -1.579 ; state.add         ; sel_mux5_1[0]$latch ; state.add         ; out_comparador[0] ; 0.000        ; 2.509      ; 1.065      ;
; -1.563 ; state.add         ; sel_mux5_1[2]$latch ; state.add         ; out_comparador[0] ; 0.000        ; 2.507      ; 1.079      ;
; -1.542 ; state.initial     ; ld_RP$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.293      ; 0.386      ;
; -1.429 ; state.add         ; ld_RE$latch         ; state.add         ; out_comparador[0] ; 0.000        ; 2.338      ; 1.044      ;
; -1.284 ; state.initial     ; ld_RE$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.338      ; 1.189      ;
; -1.205 ; state.initial     ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.547      ; 1.477      ;
; -1.204 ; state.initial     ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.548      ; 1.479      ;
; -1.168 ; state.initial     ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.607      ; 1.074      ;
; -1.135 ; state.initial     ; ld_R2$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.554      ; 1.554      ;
; -1.135 ; state.initial     ; ld_R3$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.555      ; 1.555      ;
; -1.134 ; state.initial     ; ld_R1$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.554      ; 1.555      ;
; -1.131 ; state.initial     ; ld_R0$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 2.551      ; 1.555      ;
; -1.100 ; state.MOV         ; bau[6]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 2.045      ; 1.080      ;
; -1.079 ; state.add         ; sel_mux5_1[0]$latch ; state.add         ; out_comparador[0] ; -0.500       ; 2.509      ; 1.065      ;
; -1.063 ; state.add         ; sel_mux5_1[2]$latch ; state.add         ; out_comparador[0] ; -0.500       ; 2.507      ; 1.079      ;
; -0.973 ; state.MOV         ; bau[3]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 2.135      ; 1.297      ;
; -0.966 ; state.MOV         ; bau[2]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 2.136      ; 1.305      ;
; -0.929 ; state.add         ; ld_RE$latch         ; state.add         ; out_comparador[0] ; -0.500       ; 2.338      ; 1.044      ;
; -0.921 ; state.MOV         ; bau[1]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 2.114      ; 1.328      ;
; -0.915 ; state.MOV         ; bau[0]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 2.136      ; 1.356      ;
; -0.900 ; state.MOV         ; bau[4]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 1.996      ; 1.231      ;
; -0.896 ; state.MOV         ; bau[5]              ; state.MOV         ; out_comparador[0] ; 0.000        ; 1.996      ; 1.235      ;
; -0.836 ; state.initial     ; bau[2]              ; state.initial     ; out_comparador[0] ; 0.000        ; 2.136      ; 1.435      ;
; -0.799 ; state.initial     ; bau[3]              ; state.initial     ; out_comparador[0] ; 0.000        ; 2.135      ; 1.471      ;
; -0.784 ; state.initial     ; ld_RE$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.338      ; 1.189      ;
; -0.778 ; state.initial     ; bau[6]              ; state.initial     ; out_comparador[0] ; 0.000        ; 2.045      ; 1.402      ;
; -0.723 ; state.initial     ; bau[1]              ; state.initial     ; out_comparador[0] ; 0.000        ; 2.114      ; 1.526      ;
; -0.718 ; state.initial     ; bau[0]              ; state.initial     ; out_comparador[0] ; 0.000        ; 2.136      ; 1.553      ;
; -0.705 ; state.initial     ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.547      ; 1.477      ;
; -0.704 ; state.initial     ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.548      ; 1.479      ;
; -0.693 ; state.initial     ; bau[4]              ; state.initial     ; out_comparador[0] ; 0.000        ; 1.996      ; 1.438      ;
; -0.690 ; state.initial     ; bau[5]              ; state.initial     ; out_comparador[0] ; 0.000        ; 1.996      ; 1.441      ;
; -0.635 ; state.initial     ; ld_R2$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.554      ; 1.554      ;
; -0.635 ; state.initial     ; ld_R3$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.555      ; 1.555      ;
; -0.634 ; state.initial     ; ld_R1$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.554      ; 1.555      ;
; -0.631 ; state.initial     ; ld_R0$latch         ; state.initial     ; out_comparador[0] ; -0.500       ; 2.551      ; 1.555      ;
; -0.600 ; state.MOV         ; bau[6]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 2.045      ; 1.080      ;
; -0.551 ; out_comparador[0] ; bau[3]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 2.135      ; 1.584      ;
; -0.532 ; out_comparador[0] ; bau[2]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 2.136      ; 1.604      ;
; -0.498 ; out_comparador[0] ; bau[1]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 2.114      ; 1.616      ;
; -0.473 ; out_comparador[0] ; bau[0]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 2.136      ; 1.663      ;
; -0.473 ; state.MOV         ; bau[3]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 2.135      ; 1.297      ;
; -0.466 ; state.MOV         ; bau[2]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 2.136      ; 1.305      ;
; -0.427 ; out_comparador[0] ; bau[6]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 2.045      ; 1.618      ;
; -0.421 ; state.MOV         ; bau[1]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 2.114      ; 1.328      ;
; -0.415 ; state.MOV         ; bau[0]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 2.136      ; 1.356      ;
; -0.400 ; state.MOV         ; bau[4]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 1.996      ; 1.231      ;
; -0.396 ; state.MOV         ; bau[5]              ; state.MOV         ; out_comparador[0] ; -0.500       ; 1.996      ; 1.235      ;
; -0.389 ; out_comparador[0] ; bau[4]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.996      ; 1.607      ;
; -0.359 ; out_comparador[0] ; bau[5]              ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 1.996      ; 1.637      ;
; -0.336 ; state.initial     ; bau[2]              ; state.initial     ; out_comparador[0] ; -0.500       ; 2.136      ; 1.435      ;
; -0.299 ; state.initial     ; bau[3]              ; state.initial     ; out_comparador[0] ; -0.500       ; 2.135      ; 1.471      ;
; -0.278 ; state.initial     ; bau[6]              ; state.initial     ; out_comparador[0] ; -0.500       ; 2.045      ; 1.402      ;
; -0.242 ; bau[6]            ; ld_R6$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.562      ; 0.320      ;
; -0.238 ; state.decodificar ; ld_R6$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.359      ; 0.621      ;
; -0.234 ; bau[5]            ; ld_R5$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.551      ; 0.317      ;
; -0.230 ; bau[4]            ; ld_R4$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.552      ; 0.322      ;
; -0.223 ; state.initial     ; bau[1]              ; state.initial     ; out_comparador[0] ; -0.500       ; 2.114      ; 1.526      ;
; -0.220 ; bau[6]            ; ld_R6$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.540      ; 0.320      ;
; -0.218 ; state.initial     ; bau[0]              ; state.initial     ; out_comparador[0] ; -0.500       ; 2.136      ; 1.553      ;
; -0.212 ; bau[5]            ; ld_R5$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.529      ; 0.317      ;
; -0.208 ; bau[4]            ; ld_R4$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.530      ; 0.322      ;
; -0.193 ; state.initial     ; bau[4]              ; state.initial     ; out_comparador[0] ; -0.500       ; 1.996      ; 1.438      ;
; -0.190 ; state.initial     ; bau[5]              ; state.initial     ; out_comparador[0] ; -0.500       ; 1.996      ; 1.441      ;
; -0.144 ; state.busca       ; ld_R6$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.363      ; 0.719      ;
; -0.094 ; bau[3]            ; ld_R3$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.420      ; 0.326      ;
; -0.091 ; bau[2]            ; ld_R2$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.418      ; 0.327      ;
; -0.088 ; bau[0]            ; ld_R0$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.415      ; 0.327      ;
; -0.081 ; state.sw          ; sel_mux5_1[1]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.264      ; 0.683      ;
; -0.079 ; state.sw          ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.265      ; 0.686      ;
; -0.072 ; bau[3]            ; ld_R3$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.398      ; 0.326      ;
; -0.069 ; bau[2]            ; ld_R2$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.396      ; 0.327      ;
; -0.066 ; bau[0]            ; ld_R0$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.393      ; 0.327      ;
; -0.051 ; state.busca       ; ld_R2$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.310      ; 0.759      ;
; -0.051 ; state.busca       ; ld_R3$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.311      ; 0.760      ;
; -0.051 ; out_comparador[0] ; bau[3]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 2.135      ; 1.584      ;
; -0.049 ; state.busca       ; ld_R1$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.310      ; 0.761      ;
; -0.047 ; state.busca       ; ld_R0$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.307      ; 0.760      ;
; -0.046 ; bau[1]            ; ld_R1$latch         ; out_comparador[0] ; out_comparador[0] ; 0.000        ; 0.440      ; 0.394      ;
; -0.032 ; out_comparador[0] ; bau[2]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 2.136      ; 1.604      ;
; -0.024 ; bau[1]            ; ld_R1$latch         ; state.initial     ; out_comparador[0] ; 0.000        ; 0.418      ; 0.394      ;
; 0.002  ; out_comparador[0] ; bau[1]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 2.114      ; 1.616      ;
; 0.015  ; state.busca       ; ld_R4$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.304      ; 0.819      ;
; 0.016  ; state.busca       ; ld_R5$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.303      ; 0.819      ;
; 0.027  ; out_comparador[0] ; bau[0]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 2.136      ; 1.663      ;
; 0.060  ; state.lw          ; sel_mux5_1[1]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.264      ; 0.824      ;
; 0.073  ; out_comparador[0] ; bau[6]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 2.045      ; 1.618      ;
; 0.074  ; state.sw          ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.267      ; 0.841      ;
; 0.111  ; out_comparador[0] ; bau[4]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 1.996      ; 1.607      ;
; 0.127  ; state.andd        ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.265      ; 0.892      ;
; 0.137  ; state.lw          ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.267      ; 0.904      ;
; 0.141  ; out_comparador[0] ; bau[5]              ; out_comparador[0] ; out_comparador[0] ; -0.500       ; 1.996      ; 1.637      ;
; 0.275  ; state.decodificar ; ld_R3$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.307      ; 1.082      ;
; 0.278  ; state.decodificar ; ld_R2$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.306      ; 1.084      ;
; 0.279  ; state.decodificar ; ld_R1$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.306      ; 1.085      ;
; 0.279  ; state.decodificar ; ld_R0$latch         ; clk               ; out_comparador[0] ; -0.500       ; 1.303      ; 1.082      ;
; 0.287  ; state.orr         ; sel_mux5_1[2]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.265      ; 1.052      ;
; 0.326  ; state.sub         ; sel_mux5_1[0]$latch ; clk               ; out_comparador[0] ; -0.500       ; 1.267      ; 1.093      ;
+--------+-------------------+---------------------+-------------------+-------------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'state.initial'                                                                                             ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node            ; Launch Clock      ; Latch Clock   ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+
; -1.504 ; state.initial     ; ld_RP$latch        ; state.initial     ; state.initial ; 0.000        ; 1.755      ; 0.386      ;
; -1.122 ; state.MOV         ; bau[6]             ; state.MOV         ; state.initial ; 0.000        ; 2.067      ; 1.080      ;
; -1.004 ; state.initial     ; ld_RP$latch        ; state.initial     ; state.initial ; -0.500       ; 1.755      ; 0.386      ;
; -0.995 ; state.MOV         ; bau[3]             ; state.MOV         ; state.initial ; 0.000        ; 2.157      ; 1.297      ;
; -0.988 ; state.MOV         ; bau[2]             ; state.MOV         ; state.initial ; 0.000        ; 2.158      ; 1.305      ;
; -0.943 ; state.MOV         ; bau[1]             ; state.MOV         ; state.initial ; 0.000        ; 2.136      ; 1.328      ;
; -0.937 ; state.MOV         ; bau[0]             ; state.MOV         ; state.initial ; 0.000        ; 2.158      ; 1.356      ;
; -0.922 ; state.MOV         ; bau[4]             ; state.MOV         ; state.initial ; 0.000        ; 2.018      ; 1.231      ;
; -0.918 ; state.MOV         ; bau[5]             ; state.MOV         ; state.initial ; 0.000        ; 2.018      ; 1.235      ;
; -0.858 ; state.initial     ; bau[2]             ; state.initial     ; state.initial ; 0.000        ; 2.158      ; 1.435      ;
; -0.821 ; state.initial     ; bau[3]             ; state.initial     ; state.initial ; 0.000        ; 2.157      ; 1.471      ;
; -0.800 ; state.initial     ; bau[6]             ; state.initial     ; state.initial ; 0.000        ; 2.067      ; 1.402      ;
; -0.745 ; state.initial     ; bau[1]             ; state.initial     ; state.initial ; 0.000        ; 2.136      ; 1.526      ;
; -0.740 ; state.initial     ; bau[0]             ; state.initial     ; state.initial ; 0.000        ; 2.158      ; 1.553      ;
; -0.715 ; state.initial     ; bau[4]             ; state.initial     ; state.initial ; 0.000        ; 2.018      ; 1.438      ;
; -0.712 ; state.initial     ; bau[5]             ; state.initial     ; state.initial ; 0.000        ; 2.018      ; 1.441      ;
; -0.622 ; state.MOV         ; bau[6]             ; state.MOV         ; state.initial ; -0.500       ; 2.067      ; 1.080      ;
; -0.573 ; out_comparador[0] ; bau[3]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.157      ; 1.584      ;
; -0.554 ; out_comparador[0] ; bau[2]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.158      ; 1.604      ;
; -0.551 ; state.xorr        ; sel_ULA[2]$latch   ; clk               ; state.initial ; 0.000        ; 0.892      ; 0.341      ;
; -0.520 ; out_comparador[0] ; bau[1]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.136      ; 1.616      ;
; -0.495 ; out_comparador[0] ; bau[0]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.158      ; 1.663      ;
; -0.495 ; state.MOV         ; bau[3]             ; state.MOV         ; state.initial ; -0.500       ; 2.157      ; 1.297      ;
; -0.488 ; state.MOV         ; bau[2]             ; state.MOV         ; state.initial ; -0.500       ; 2.158      ; 1.305      ;
; -0.449 ; out_comparador[0] ; bau[6]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.067      ; 1.618      ;
; -0.443 ; state.MOV         ; bau[1]             ; state.MOV         ; state.initial ; -0.500       ; 2.136      ; 1.328      ;
; -0.437 ; state.MOV         ; bau[0]             ; state.MOV         ; state.initial ; -0.500       ; 2.158      ; 1.356      ;
; -0.422 ; state.MOV         ; bau[4]             ; state.MOV         ; state.initial ; -0.500       ; 2.018      ; 1.231      ;
; -0.418 ; state.MOV         ; bau[5]             ; state.MOV         ; state.initial ; -0.500       ; 2.018      ; 1.235      ;
; -0.411 ; out_comparador[0] ; bau[4]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.018      ; 1.607      ;
; -0.381 ; out_comparador[0] ; bau[5]             ; out_comparador[0] ; state.initial ; 0.000        ; 2.018      ; 1.637      ;
; -0.358 ; state.initial     ; bau[2]             ; state.initial     ; state.initial ; -0.500       ; 2.158      ; 1.435      ;
; -0.321 ; state.initial     ; bau[3]             ; state.initial     ; state.initial ; -0.500       ; 2.157      ; 1.471      ;
; -0.307 ; state.andd        ; sel_ULA[1]$latch   ; clk               ; state.initial ; 0.000        ; 0.899      ; 0.592      ;
; -0.300 ; state.initial     ; bau[6]             ; state.initial     ; state.initial ; -0.500       ; 2.067      ; 1.402      ;
; -0.277 ; state.orr         ; sel_ULA[0]$latch   ; clk               ; state.initial ; 0.000        ; 0.899      ; 0.622      ;
; -0.274 ; state.orr         ; sel_ULA[1]$latch   ; clk               ; state.initial ; 0.000        ; 0.899      ; 0.625      ;
; -0.245 ; state.initial     ; bau[1]             ; state.initial     ; state.initial ; -0.500       ; 2.136      ; 1.526      ;
; -0.240 ; state.initial     ; bau[0]             ; state.initial     ; state.initial ; -0.500       ; 2.158      ; 1.553      ;
; -0.237 ; state.sub         ; sel_ULA[0]$latch   ; clk               ; state.initial ; 0.000        ; 0.899      ; 0.662      ;
; -0.215 ; state.initial     ; bau[4]             ; state.initial     ; state.initial ; -0.500       ; 2.018      ; 1.438      ;
; -0.212 ; state.initial     ; bau[5]             ; state.initial     ; state.initial ; -0.500       ; 2.018      ; 1.441      ;
; -0.171 ; state.MOVS        ; ld_RS$latch        ; clk               ; state.initial ; 0.000        ; 0.521      ; 0.350      ;
; -0.162 ; state.sw          ; ld_MemDados$latch  ; clk               ; state.initial ; 0.000        ; 0.499      ; 0.337      ;
; -0.073 ; out_comparador[0] ; bau[3]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.157      ; 1.584      ;
; -0.054 ; out_comparador[0] ; bau[2]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.158      ; 1.604      ;
; -0.023 ; state.busca       ; pc_increment$latch ; clk               ; state.initial ; 0.000        ; 0.553      ; 0.530      ;
; -0.020 ; out_comparador[0] ; bau[1]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.136      ; 1.616      ;
; -0.003 ; state.busca       ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 0.576      ; 0.573      ;
; 0.005  ; out_comparador[0] ; bau[0]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.158      ; 1.663      ;
; 0.021  ; state.ret         ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 0.530      ; 0.551      ;
; 0.051  ; out_comparador[0] ; bau[6]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.067      ; 1.618      ;
; 0.089  ; out_comparador[0] ; bau[4]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.018      ; 1.607      ;
; 0.095  ; state.jma         ; ld_PC$latch        ; clk               ; state.initial ; 0.000        ; 0.530      ; 0.625      ;
; 0.119  ; out_comparador[0] ; bau[5]             ; out_comparador[0] ; state.initial ; -0.500       ; 2.018      ; 1.637      ;
; 0.860  ; state.nop         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.274      ;
; 0.897  ; state.nop         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.913      ; 1.310      ;
; 0.904  ; state.busca       ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.318      ;
; 0.914  ; state.sltu        ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.909      ; 1.323      ;
; 0.918  ; state.nop         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.241      ;
; 0.933  ; state.sltu        ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.910      ; 1.343      ;
; 0.941  ; state.busca       ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.913      ; 1.354      ;
; 0.962  ; state.busca       ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.285      ;
; 0.967  ; state.sltu        ; bau[1]             ; clk               ; state.initial ; -0.500       ; 0.888      ; 1.355      ;
; 0.973  ; state.nop         ; bau[1]             ; clk               ; state.initial ; -0.500       ; 0.892      ; 1.365      ;
; 0.978  ; state.nop         ; bau[0]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.392      ;
; 0.981  ; state.mbl         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.304      ;
; 0.982  ; state.jme         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.396      ;
; 0.992  ; state.sltu        ; bau[0]             ; clk               ; state.initial ; -0.500       ; 0.910      ; 1.402      ;
; 0.996  ; state.jz          ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.410      ;
; 1.003  ; state.nop         ; bau[4]             ; clk               ; state.initial ; -0.500       ; 0.774      ; 1.277      ;
; 1.006  ; state.nop         ; bau[5]             ; clk               ; state.initial ; -0.500       ; 0.774      ; 1.280      ;
; 1.017  ; state.busca       ; bau[1]             ; clk               ; state.initial ; -0.500       ; 0.892      ; 1.409      ;
; 1.019  ; state.jme         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.913      ; 1.432      ;
; 1.022  ; state.busca       ; bau[0]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.436      ;
; 1.031  ; state.MOVS        ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.868      ; 1.399      ;
; 1.033  ; state.jz          ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.913      ; 1.446      ;
; 1.038  ; state.sltu        ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.819      ; 1.357      ;
; 1.040  ; state.jme         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.363      ;
; 1.047  ; state.busca       ; bau[4]             ; clk               ; state.initial ; -0.500       ; 0.774      ; 1.321      ;
; 1.050  ; state.busca       ; bau[5]             ; clk               ; state.initial ; -0.500       ; 0.774      ; 1.324      ;
; 1.051  ; state.decodificar ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.910      ; 1.461      ;
; 1.051  ; state.mbh         ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.374      ;
; 1.054  ; state.jz          ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.823      ; 1.377      ;
; 1.060  ; state.lw          ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.825      ; 1.385      ;
; 1.068  ; state.MOVS        ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.867      ; 1.435      ;
; 1.076  ; state.sltu        ; bau[4]             ; clk               ; state.initial ; -0.500       ; 0.770      ; 1.346      ;
; 1.088  ; state.decodificar ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.909      ; 1.497      ;
; 1.089  ; state.MOVS        ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.777      ; 1.366      ;
; 1.095  ; state.jme         ; bau[1]             ; clk               ; state.initial ; -0.500       ; 0.892      ; 1.487      ;
; 1.100  ; state.jme         ; bau[0]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.514      ;
; 1.104  ; state.jma         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.868      ; 1.472      ;
; 1.106  ; state.sltu        ; bau[5]             ; clk               ; state.initial ; -0.500       ; 0.770      ; 1.376      ;
; 1.108  ; state.mbl         ; bau[3]             ; clk               ; state.initial ; -0.500       ; 0.913      ; 1.521      ;
; 1.109  ; state.decodificar ; bau[6]             ; clk               ; state.initial ; -0.500       ; 0.819      ; 1.428      ;
; 1.109  ; state.jz          ; bau[1]             ; clk               ; state.initial ; -0.500       ; 0.892      ; 1.501      ;
; 1.112  ; state.sw          ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.916      ; 1.528      ;
; 1.114  ; state.jz          ; bau[0]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.528      ;
; 1.115  ; state.mbl         ; bau[2]             ; clk               ; state.initial ; -0.500       ; 0.914      ; 1.529      ;
; 1.125  ; state.jme         ; bau[4]             ; clk               ; state.initial ; -0.500       ; 0.774      ; 1.399      ;
+--------+-------------------+--------------------+-------------------+---------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'state.add'                                                                                    ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node   ; To Node            ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+
; -1.201 ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; 0.000        ; 1.615      ; 0.549      ;
; -0.701 ; state.add   ; selmux3$latch      ; state.add    ; state.add   ; -0.500       ; 1.615      ; 0.549      ;
; 0.049  ; state.xorr  ; sel_ULA[2]$latch   ; clk          ; state.add   ; -0.500       ; 0.792      ; 0.341      ;
; 0.293  ; state.andd  ; sel_ULA[1]$latch   ; clk          ; state.add   ; -0.500       ; 0.799      ; 0.592      ;
; 0.323  ; state.orr   ; sel_ULA[0]$latch   ; clk          ; state.add   ; -0.500       ; 0.799      ; 0.622      ;
; 0.326  ; state.orr   ; sel_ULA[1]$latch   ; clk          ; state.add   ; -0.500       ; 0.799      ; 0.625      ;
; 0.363  ; state.sub   ; sel_ULA[0]$latch   ; clk          ; state.add   ; -0.500       ; 0.799      ; 0.662      ;
; 0.485  ; state.MOVS  ; ld_RS$latch        ; clk          ; state.add   ; -0.500       ; 0.365      ; 0.350      ;
; 0.598  ; state.busca ; pc_increment$latch ; clk          ; state.add   ; -0.500       ; 0.432      ; 0.530      ;
; 0.642  ; state.busca ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 0.431      ; 0.573      ;
; 0.666  ; state.ret   ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 0.385      ; 0.551      ;
; 0.704  ; state.sub   ; selmux3$latch      ; clk          ; state.add   ; -0.500       ; 0.373      ; 0.577      ;
; 0.740  ; state.jma   ; ld_PC$latch        ; clk          ; state.add   ; -0.500       ; 0.385      ; 0.625      ;
+--------+-------------+--------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node           ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+
; -0.842 ; state.initial     ; state.busca       ; state.initial ; clk         ; 0.000        ; 1.244      ; 0.685      ;
; -0.342 ; state.initial     ; state.busca       ; state.initial ; clk         ; -0.500       ; 1.244      ; 0.685      ;
; 0.372  ; state.decodificar ; state.MOV         ; clk           ; clk         ; 0.000        ; 0.102      ; 0.622      ;
; 0.373  ; state.decodificar ; state.add         ; clk           ; clk         ; 0.000        ; 0.102      ; 0.623      ;
; 0.407  ; state.busca       ; state.decodificar ; clk           ; clk         ; 0.000        ; 0.004      ; 0.559      ;
; 0.450  ; state.busca       ; state.busca       ; clk           ; clk         ; 0.000        ; 0.000      ; 0.598      ;
; 0.483  ; state.decodificar ; state.sltu        ; clk           ; clk         ; 0.000        ; 0.000      ; 0.631      ;
; 0.561  ; state.decodificar ; state.nop         ; clk           ; clk         ; 0.000        ; -0.004     ; 0.705      ;
; 0.588  ; state.decodificar ; state.sub         ; clk           ; clk         ; 0.000        ; -0.006     ; 0.730      ;
; 0.592  ; state.decodificar ; state.andd        ; clk           ; clk         ; 0.000        ; -0.006     ; 0.734      ;
; 0.593  ; state.decodificar ; state.slt         ; clk           ; clk         ; 0.000        ; -0.006     ; 0.735      ;
; 0.594  ; state.decodificar ; state.orr         ; clk           ; clk         ; 0.000        ; -0.006     ; 0.736      ;
; 0.594  ; state.decodificar ; state.xorr        ; clk           ; clk         ; 0.000        ; -0.006     ; 0.736      ;
; 0.597  ; state.decodificar ; state.busca       ; clk           ; clk         ; 0.000        ; -0.004     ; 0.741      ;
; 0.608  ; state.decodificar ; state.jma         ; clk           ; clk         ; 0.000        ; 0.042      ; 0.798      ;
; 0.622  ; state.decodificar ; state.ret         ; clk           ; clk         ; 0.000        ; 0.042      ; 0.812      ;
; 0.623  ; state.decodificar ; state.MOVS        ; clk           ; clk         ; 0.000        ; 0.042      ; 0.813      ;
; 0.627  ; state.decodificar ; state.sw          ; clk           ; clk         ; 0.000        ; -0.006     ; 0.769      ;
; 0.628  ; state.decodificar ; state.lw          ; clk           ; clk         ; 0.000        ; -0.006     ; 0.770      ;
; 0.649  ; state.decodificar ; state.mbl         ; clk           ; clk         ; 0.000        ; -0.004     ; 0.793      ;
; 0.650  ; state.decodificar ; state.mbh         ; clk           ; clk         ; 0.000        ; -0.004     ; 0.794      ;
; 0.651  ; state.decodificar ; state.jz          ; clk           ; clk         ; 0.000        ; -0.004     ; 0.795      ;
; 0.690  ; state.decodificar ; state.jme         ; clk           ; clk         ; 0.000        ; -0.004     ; 0.834      ;
+--------+-------------------+-------------------+---------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'state.MOV'                                                                                            ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock  ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+
; -0.773 ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.852      ; 1.214      ;
; -0.745 ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.860      ; 1.250      ;
; -0.744 ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.859      ; 1.250      ;
; -0.678 ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.806      ; 1.263      ;
; -0.677 ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.806      ; 1.264      ;
; -0.642 ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; 0.000        ; 1.809      ; 1.302      ;
; -0.591 ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; 0.000        ; 1.500      ; 1.044      ;
; -0.446 ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; 0.000        ; 1.500      ; 1.189      ;
; -0.273 ; state.add         ; sel_mux7_2[2]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.852      ; 1.214      ;
; -0.245 ; state.add         ; sel_mux7_1[2]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.860      ; 1.250      ;
; -0.244 ; state.add         ; sel_mux7_1[0]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.859      ; 1.250      ;
; -0.178 ; state.add         ; sel_mux7_2[1]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.806      ; 1.263      ;
; -0.177 ; state.add         ; sel_mux7_2[0]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.806      ; 1.264      ;
; -0.142 ; state.add         ; sel_mux7_1[1]$latch ; state.add     ; state.MOV   ; -0.500       ; 1.809      ; 1.302      ;
; -0.091 ; state.add         ; ld_RE$latch         ; state.add     ; state.MOV   ; -0.500       ; 1.500      ; 1.044      ;
; 0.054  ; state.initial     ; ld_RE$latch         ; state.initial ; state.MOV   ; -0.500       ; 1.500      ; 1.189      ;
; 0.311  ; state.sltu        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.612      ; 0.923      ;
; 0.315  ; state.sltu        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.611      ; 0.926      ;
; 0.317  ; state.andd        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.610      ; 0.927      ;
; 0.412  ; state.andd        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 0.976      ;
; 0.413  ; state.andd        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 0.977      ;
; 0.418  ; state.sltu        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.561      ; 0.979      ;
; 0.443  ; state.andd        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.618      ; 1.061      ;
; 0.444  ; state.andd        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.617      ; 1.061      ;
; 0.459  ; state.sltu        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.604      ; 1.063      ;
; 0.460  ; state.jme         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.616      ; 1.076      ;
; 0.461  ; state.jme         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.615      ; 1.076      ;
; 0.465  ; state.slt         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.610      ; 1.075      ;
; 0.509  ; state.ret         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 0.115      ; 0.624      ;
; 0.510  ; state.jz          ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.616      ; 1.126      ;
; 0.511  ; state.slt         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.618      ; 1.129      ;
; 0.511  ; state.jz          ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.615      ; 1.126      ;
; 0.512  ; state.slt         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.617      ; 1.129      ;
; 0.526  ; state.mbh         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.616      ; 1.142      ;
; 0.527  ; state.mbh         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.615      ; 1.142      ;
; 0.546  ; state.andd        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.567      ; 1.113      ;
; 0.551  ; state.sltu        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.558      ; 1.109      ;
; 0.552  ; state.sltu        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.558      ; 1.110      ;
; 0.552  ; state.MOVS        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.562      ; 1.114      ;
; 0.560  ; state.slt         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.124      ;
; 0.561  ; state.slt         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.125      ;
; 0.563  ; state.jme         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.565      ; 1.128      ;
; 0.572  ; state.mbl         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.616      ; 1.188      ;
; 0.573  ; state.mbl         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.615      ; 1.188      ;
; 0.577  ; state.orr         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.610      ; 1.187      ;
; 0.582  ; state.jma         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 0.115      ; 0.697      ;
; 0.605  ; state.orr         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.618      ; 1.223      ;
; 0.606  ; state.orr         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.617      ; 1.223      ;
; 0.613  ; state.jz          ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.565      ; 1.178      ;
; 0.614  ; state.slt         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.567      ; 1.181      ;
; 0.629  ; state.mbh         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.565      ; 1.194      ;
; 0.641  ; state.xorr        ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.610      ; 1.251      ;
; 0.644  ; state.MOVS        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.516      ; 1.160      ;
; 0.645  ; state.MOVS        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.516      ; 1.161      ;
; 0.655  ; state.sub         ; sel_mux7_2[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.610      ; 1.265      ;
; 0.669  ; state.xorr        ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.618      ; 1.287      ;
; 0.670  ; state.xorr        ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.617      ; 1.287      ;
; 0.672  ; state.orr         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.236      ;
; 0.673  ; state.orr         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.237      ;
; 0.675  ; state.mbl         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.565      ; 1.240      ;
; 0.678  ; state.mbh         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 0.161      ; 0.839      ;
; 0.683  ; state.sub         ; sel_mux7_1[2]$latch ; clk           ; state.MOV   ; 0.000        ; 0.618      ; 1.301      ;
; 0.684  ; state.sub         ; sel_mux7_1[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.617      ; 1.301      ;
; 0.708  ; state.orr         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.567      ; 1.275      ;
; 0.724  ; state.mbl         ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 0.161      ; 0.885      ;
; 0.725  ; state.busca       ; ld_RI$latch         ; clk           ; state.MOV   ; 0.000        ; 0.161      ; 0.886      ;
; 0.736  ; state.xorr        ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.300      ;
; 0.737  ; state.xorr        ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.301      ;
; 0.750  ; state.sub         ; sel_mux7_2[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.314      ;
; 0.751  ; state.sub         ; sel_mux7_2[0]$latch ; clk           ; state.MOV   ; 0.000        ; 0.564      ; 1.315      ;
; 0.759  ; state.orr         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.258      ; 1.017      ;
; 0.772  ; state.xorr        ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.567      ; 1.339      ;
; 0.786  ; state.sub         ; sel_mux7_1[1]$latch ; clk           ; state.MOV   ; 0.000        ; 0.567      ; 1.353      ;
; 0.816  ; state.busca       ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.256      ; 1.072      ;
; 0.823  ; state.xorr        ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.258      ; 1.081      ;
; 0.837  ; state.sub         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.258      ; 1.095      ;
; 0.963  ; state.decodificar ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.252      ; 1.215      ;
; 1.011  ; state.ret         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.210      ; 1.221      ;
; 1.032  ; state.jma         ; ld_RE$latch         ; clk           ; state.MOV   ; 0.000        ; 0.210      ; 1.242      ;
+--------+-------------------+---------------------+---------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                  ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.MOV             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOV             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.MOVS            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOVS            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.add             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.add             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.andd            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.andd            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.busca           ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.busca           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.decodificar     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.decodificar     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.initial         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.initial         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.jma             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jma             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.jme             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jme             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.jz              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jz              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.lw              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.lw              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.mbh             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbh             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.mbl             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbl             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.nop             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.nop             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.orr             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.orr             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.ret             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.ret             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.slt             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.slt             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.sltu            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sltu            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.sub             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sub             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.sw              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sw              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; state.xorr            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; state.xorr            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.MOVS|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOVS|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.MOV|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.MOV|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.add|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.add|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.andd|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.andd|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.busca|clk       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.busca|clk       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.decodificar|clk ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.decodificar|clk ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.initial|clk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.initial|clk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jma|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jma|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jme|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jme|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.jz|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.jz|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.lw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.lw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.mbh|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbh|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.mbl|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.mbl|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.nop|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.nop|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.orr|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.orr|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.ret|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.ret|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sltu|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sltu|clk        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.slt|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.slt|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sub|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sub|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.sw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.sw|clk          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; state.xorr|clk        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; state.xorr|clk        ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'out_comparador[0]'                                                                       ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock             ; Clock Edge ; Target                       ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; out_comparador[0] ; Rise       ; out_comparador[0]            ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|inclk[0] ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|inclk[0] ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|outclk   ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1clkctrl|outclk   ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|combout         ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|combout         ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[0]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[0]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[0]$latch|datad    ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[0]$latch|datad    ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[1]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[1]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[1]$latch|datad    ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[1]$latch|datad    ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; sel_mux5_1[2]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; sel_mux5_1[2]$latch          ;
; 0.496  ; 0.496        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; sel_mux5_1[2]$latch|datad    ;
; 0.496  ; 0.496        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; sel_mux5_1[2]$latch|datad    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~1|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~1|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector14~1|datab           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector14~1|datab           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|dataa           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|dataa           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector21~1|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector21~1|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector37~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector37~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~0|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~0|datad           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2|combout         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector52~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector52~2|datac           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector9~2|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector9~2|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; Selector9~2|dataa            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; Selector9~2|dataa            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[0]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[0]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[0]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[0]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[1]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[1]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[1]|datab                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[1]|datab                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[2]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[2]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[2]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[2]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[3]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[3]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[3]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[3]|dataa                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[4]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[4]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[4]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[4]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[5]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[5]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[5]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[5]|datad                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; bau[6]                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; bau[6]                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; bau[6]|datac                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; bau[6]|datac                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R0$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R0$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R0$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R0$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R1$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R1$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R1$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R1$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R2$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R2$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R2$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R2$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R3$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Fall       ; ld_R3$latch                  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Rise       ; ld_R3$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; out_comparador[0] ; Rise       ; ld_R3$latch|datac            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; out_comparador[0] ; Fall       ; ld_R4$latch                  ;
+--------+--------------+----------------+------------------+-------------------+------------+------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'state.MOV'                                                                    ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock     ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector47~0|combout       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector47~0|combout       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; Selector47~0|datad         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; Selector47~0|datad         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~1|combout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~1|combout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; Selector9~1|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; Selector9~1|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~2|combout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~2|combout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; Selector9~2|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; Selector9~2|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22|dataa             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22|dataa             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22~clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22~clkctrl|inclk[0]  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr22~clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr22~clkctrl|outclk    ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr24~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr24~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; WideOr24~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; WideOr24~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; WideOr7|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; WideOr7|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; WideOr7|datab              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; WideOr7|datab              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RE$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RE$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Fall       ; ld_RE$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Fall       ; ld_RE$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RI$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RI$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; ld_RI$latch|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; ld_RI$latch|dataa          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[0]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[0]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_1[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_1[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[0]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[0]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[0]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[1]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[1]$latch|datad  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[2]$latch        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; sel_mux7_2[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; sel_mux7_2[2]$latch|datac  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.MOV ; Rise       ; state.MOV|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.MOV ; Rise       ; state.MOV|regout           ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'state.add'                                                                    ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock     ; Clock Edge ; Target                     ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr12~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr12~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr12~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr12~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr23~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr23~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr23~0|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr27~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr27~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr27~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr27~0|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; WideOr5~4|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; WideOr5~4|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~4|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~4|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~5|combout          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~5|combout          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; WideOr5~5|datad            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; WideOr5~5|datad            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; ld_PC$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; ld_PC$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; ld_PC$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; ld_PC$latch|datab          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; ld_RS$latch                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; ld_RS$latch                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; ld_RS$latch|datac          ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; ld_RS$latch|datac          ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; pc_increment$latch         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; pc_increment$latch         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; pc_increment$latch|datac   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; pc_increment$latch|datac   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[0]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[0]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[1]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[1]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; sel_ULA[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; sel_ULA[2]$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; sel_ULA[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; sel_ULA[2]$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; selmux3$latch              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; selmux3$latch              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Fall       ; selmux3$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Fall       ; selmux3$latch|datac        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.add ; Rise       ; state.add|regout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.add ; Rise       ; state.add|regout           ;
+-------+--------------+----------------+------------------+-----------+------------+----------------------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'state.initial'                                                                      ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock         ; Clock Edge ; Target                       ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; Selector14~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; Selector14~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector14~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector14~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; Selector37~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; Selector37~2|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; Selector37~2|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; Selector37~2|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideNor0~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideNor0~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideNor0~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideNor0~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr12~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr12~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr12~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr12~0|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr14~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr14~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr14~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr14~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr27~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr27~0|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr27~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr27~0|datad             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr30|combout             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr30|combout             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr30|datac               ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr30|datac               ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; WideOr5~4|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; WideOr5~4|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~4|datad              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~4|datad              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~5|combout            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~5|combout            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; WideOr5~5|dataa              ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; WideOr5~5|dataa              ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[0]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[0]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[0]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[0]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[1]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[1]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[1]|datab                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[1]|datab                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[2]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[2]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[2]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[2]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[3]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[3]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[3]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[3]|dataa                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[4]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[4]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[4]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[4]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[5]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[5]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[5]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[5]|datad                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; bau[6]                       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; bau[6]                       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; bau[6]|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; bau[6]|datac                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_MemDados$latch            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_MemDados$latch            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_MemDados$latch|datac      ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_MemDados$latch|datac      ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_PC$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_PC$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_PC$latch|datab            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_PC$latch|datab            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_RP$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_RP$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_RP$latch|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_RP$latch|dataa            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; ld_RS$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; ld_RS$latch                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; ld_RS$latch|datac            ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; ld_RS$latch|datac            ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; pc_increment$latch           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; pc_increment$latch           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; pc_increment$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; pc_increment$latch|datac     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; sel_ULA[0]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; sel_ULA[0]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; sel_ULA[0]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; sel_ULA[0]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Rise       ; sel_ULA[1]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Rise       ; sel_ULA[1]$latch             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; state.initial ; Fall       ; sel_ULA[1]$latch|datac       ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; state.initial ; Fall       ; sel_ULA[1]$latch|datac       ;
+-------+--------------+----------------+------------------+---------------+------------+------------------------------+


+-------------------------------------------------------------------------------------------+
; Setup Times                                                                               ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; 3.025  ; 3.025  ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; 2.420  ; 2.420  ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; 2.927  ; 2.927  ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; 3.025  ; 3.025  ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; 2.728  ; 2.728  ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; 2.792  ; 2.792  ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 2.665  ; 2.665  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 0.175  ; 0.175  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; 2.665  ; 2.665  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 3.054  ; 3.054  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; 2.873  ; 2.873  ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; 2.685  ; 2.685  ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; 2.616  ; 2.616  ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 0.523  ; 0.523  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; 3.054  ; 3.054  ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; 2.950  ; 2.950  ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; 2.507  ; 2.507  ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 0.183  ; 0.183  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 0.136  ; 0.136  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 2.339  ; 2.339  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; -0.223 ; -0.223 ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; 2.339  ; 2.339  ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; 2.248  ; 2.248  ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; 2.176  ; 2.176  ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; -0.134 ; -0.134 ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; -0.260 ; -0.260 ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 2.643  ; 2.643  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 0.153  ; 0.153  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; 2.643  ; 2.643  ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 3.032  ; 3.032  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; 2.851  ; 2.851  ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; 2.663  ; 2.663  ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; 2.594  ; 2.594  ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 0.501  ; 0.501  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; 3.032  ; 3.032  ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; 2.928  ; 2.928  ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; 2.485  ; 2.485  ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 0.161  ; 0.161  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 0.114  ; 0.114  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+-------------------------------------------------------------------------------------------+
; Hold Times                                                                                ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; -1.935 ; -1.935 ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; -2.032 ; -2.032 ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; -2.109 ; -2.109 ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; -2.034 ; -2.034 ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; -1.935 ; -1.935 ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; -2.272 ; -2.272 ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 0.551  ; 0.551  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 0.551  ; 0.551  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; -1.939 ; -1.939 ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 1.136  ; 1.136  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; -1.974 ; -1.974 ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; -1.960 ; -1.960 ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; -1.931 ; -1.931 ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 0.643  ; 0.643  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; -1.806 ; -1.806 ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; -1.655 ; -1.655 ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; -1.330 ; -1.330 ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 1.124  ; 1.124  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 1.136  ; 1.136  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 0.650  ; 0.650  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; 0.648  ; 0.648  ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; -1.866 ; -1.866 ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; -1.803 ; -1.803 ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; -1.739 ; -1.739 ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; 0.543  ; 0.543  ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; 0.650  ; 0.650  ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 0.573  ; 0.573  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 0.573  ; 0.573  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; -1.917 ; -1.917 ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 0.739  ; 0.739  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; -1.952 ; -1.952 ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; -1.938 ; -1.938 ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; -1.909 ; -1.909 ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 0.665  ; 0.665  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; -1.784 ; -1.784 ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; -1.633 ; -1.633 ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; -1.904 ; -1.904 ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 0.739  ; 0.739  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 0.639  ; 0.639  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+-------------------------------------------------------------------------------------+
; Clock to Output Times                                                               ;
+----------------+-------------------+-------+-------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise  ; Fall  ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+-------+-------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 4.420 ; 4.420 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 4.326 ; 4.326 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 4.425 ; 4.425 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 4.336 ; 4.336 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 4.311 ; 4.311 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 4.343 ; 4.343 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 4.547 ; 4.547 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 4.034 ; 4.034 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 4.133 ; 4.133 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 4.484 ; 4.484 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 4.350 ; 4.350 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 4.337 ; 4.337 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 4.484 ; 4.484 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 3.196 ; 3.196 ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 3.251 ; 3.251 ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 3.875 ; 3.875 ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 3.875 ; 3.875 ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 3.713 ; 3.713 ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 3.744 ; 3.744 ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 3.761 ; 3.761 ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 3.708 ; 3.708 ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 3.706 ; 3.706 ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 3.761 ; 3.761 ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 3.517 ; 3.517 ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 3.483 ; 3.483 ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 3.518 ; 3.518 ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 4.011 ; 4.011 ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 4.011 ; 4.011 ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 3.873 ; 3.873 ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 3.863 ; 3.863 ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 3.476 ; 3.476 ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 3.768 ; 3.768 ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 3.662 ; 3.662 ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 3.595 ; 3.595 ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 4.111 ; 4.111 ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 4.111 ; 4.111 ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 3.973 ; 3.973 ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 3.963 ; 3.963 ; Rise       ; state.initial     ;
+----------------+-------------------+-------+-------+------------+-------------------+


+-------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                       ;
+----------------+-------------------+-------+-------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise  ; Fall  ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+-------+-------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 4.420 ; 4.420 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 4.326 ; 4.326 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 4.425 ; 4.425 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 4.336 ; 4.336 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 4.311 ; 4.311 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 4.343 ; 4.343 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 4.547 ; 4.547 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 4.034 ; 4.034 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 4.133 ; 4.133 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 4.333 ; 4.333 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 4.346 ; 4.346 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 4.333 ; 4.333 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 4.480 ; 4.480 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 3.196 ; 3.196 ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 3.251 ; 3.251 ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 3.713 ; 3.713 ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 3.875 ; 3.875 ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 3.713 ; 3.713 ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 3.744 ; 3.744 ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 3.706 ; 3.706 ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 3.708 ; 3.708 ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 3.706 ; 3.706 ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 3.761 ; 3.761 ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 3.517 ; 3.517 ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 3.483 ; 3.483 ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 3.518 ; 3.518 ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 3.863 ; 3.863 ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 4.011 ; 4.011 ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 3.873 ; 3.873 ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 3.863 ; 3.863 ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 3.476 ; 3.476 ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 3.768 ; 3.768 ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 3.662 ; 3.662 ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 3.595 ; 3.595 ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 3.963 ; 3.963 ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 4.111 ; 4.111 ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 3.973 ; 3.973 ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 3.963 ; 3.963 ; Rise       ; state.initial     ;
+----------------+-------------------+-------+-------+------------+-------------------+


+-----------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                               ;
+--------------------+---------+---------+----------+---------+---------------------+
; Clock              ; Setup   ; Hold    ; Recovery ; Removal ; Minimum Pulse Width ;
+--------------------+---------+---------+----------+---------+---------------------+
; Worst-case Slack   ; -3.993  ; -5.564  ; N/A      ; N/A     ; -1.631              ;
;  clk               ; -1.318  ; -1.529  ; N/A      ; N/A     ; -1.631              ;
;  out_comparador[0] ; -3.993  ; -5.564  ; N/A      ; N/A     ; -1.469              ;
;  state.MOV         ; -2.277  ; -1.673  ; N/A      ; N/A     ; 0.500               ;
;  state.add         ; -0.455  ; -3.430  ; N/A      ; N/A     ; 0.500               ;
;  state.initial     ; -3.407  ; -4.164  ; N/A      ; N/A     ; 0.500               ;
; Design-wide TNS    ; -88.092 ; -88.266 ; 0.0      ; 0.0     ; -28.762             ;
;  clk               ; -18.875 ; -1.529  ; N/A      ; N/A     ; -27.293             ;
;  out_comparador[0] ; -30.969 ; -45.926 ; N/A      ; N/A     ; -1.469              ;
;  state.MOV         ; -16.559 ; -8.284  ; N/A      ; N/A     ; 0.000               ;
;  state.add         ; -1.093  ; -5.545  ; N/A      ; N/A     ; 0.000               ;
;  state.initial     ; -20.596 ; -26.982 ; N/A      ; N/A     ; 0.000               ;
+--------------------+---------+---------+----------+---------+---------------------+


+-------------------------------------------------------------------------------------------+
; Setup Times                                                                               ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; 6.826  ; 6.826  ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; 4.974  ; 4.974  ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; 6.549  ; 6.549  ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; 6.826  ; 6.826  ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; 6.060  ; 6.060  ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; 6.029  ; 6.029  ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 6.180  ; 6.180  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 1.273  ; 1.273  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; 6.180  ; 6.180  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 7.350  ; 7.350  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; 6.793  ; 6.793  ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; 6.219  ; 6.219  ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; 6.045  ; 6.045  ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 2.425  ; 2.425  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; 7.350  ; 7.350  ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; 7.031  ; 7.031  ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; 5.751  ; 5.751  ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 1.383  ; 1.383  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 1.277  ; 1.277  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 4.828  ; 4.828  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; -0.058 ; -0.058 ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; 4.828  ; 4.828  ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; 4.511  ; 4.511  ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; 4.461  ; 4.461  ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; 0.161  ; 0.161  ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; -0.181 ; -0.181 ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 5.594  ; 5.594  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 0.687  ; 0.687  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; 5.594  ; 5.594  ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 6.764  ; 6.764  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; 6.207  ; 6.207  ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; 5.633  ; 5.633  ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; 5.459  ; 5.459  ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 1.839  ; 1.839  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; 6.764  ; 6.764  ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; 6.445  ; 6.445  ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; 5.165  ; 5.165  ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 0.797  ; 0.797  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 0.691  ; 0.691  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+-------------------------------------------------------------------------------------------+
; Hold Times                                                                                ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; Data Port          ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+--------------------+-------------------+--------+--------+------------+-------------------+
; regInstrucao[*]    ; clk               ; -1.935 ; -1.935 ; Rise       ; clk               ;
;  regInstrucao[11]  ; clk               ; -2.032 ; -2.032 ; Rise       ; clk               ;
;  regInstrucao[12]  ; clk               ; -2.109 ; -2.109 ; Rise       ; clk               ;
;  regInstrucao[13]  ; clk               ; -2.034 ; -2.034 ; Rise       ; clk               ;
;  regInstrucao[14]  ; clk               ; -1.935 ; -1.935 ; Rise       ; clk               ;
;  regInstrucao[15]  ; clk               ; -2.272 ; -2.272 ; Rise       ; clk               ;
; out_comparador[*]  ; out_comparador[0] ; 0.880  ; 0.880  ; Fall       ; out_comparador[0] ;
;  out_comparador[0] ; out_comparador[0] ; 0.880  ; 0.880  ; Fall       ; out_comparador[0] ;
;  out_comparador[1] ; out_comparador[0] ; -1.939 ; -1.939 ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; out_comparador[0] ; 2.608  ; 2.608  ; Fall       ; out_comparador[0] ;
;  regInstrucao[2]   ; out_comparador[0] ; -1.974 ; -1.974 ; Fall       ; out_comparador[0] ;
;  regInstrucao[3]   ; out_comparador[0] ; -1.960 ; -1.960 ; Fall       ; out_comparador[0] ;
;  regInstrucao[4]   ; out_comparador[0] ; -1.931 ; -1.931 ; Fall       ; out_comparador[0] ;
;  regInstrucao[5]   ; out_comparador[0] ; 1.139  ; 1.139  ; Fall       ; out_comparador[0] ;
;  regInstrucao[6]   ; out_comparador[0] ; -1.806 ; -1.806 ; Fall       ; out_comparador[0] ;
;  regInstrucao[7]   ; out_comparador[0] ; -1.655 ; -1.655 ; Fall       ; out_comparador[0] ;
;  regInstrucao[8]   ; out_comparador[0] ; -1.330 ; -1.330 ; Fall       ; out_comparador[0] ;
;  regInstrucao[9]   ; out_comparador[0] ; 2.587  ; 2.587  ; Fall       ; out_comparador[0] ;
;  regInstrucao[10]  ; out_comparador[0] ; 2.608  ; 2.608  ; Fall       ; out_comparador[0] ;
; regInstrucao[*]    ; state.MOV         ; 1.500  ; 1.500  ; Rise       ; state.MOV         ;
;  regInstrucao[5]   ; state.MOV         ; 1.477  ; 1.477  ; Rise       ; state.MOV         ;
;  regInstrucao[6]   ; state.MOV         ; -1.866 ; -1.866 ; Rise       ; state.MOV         ;
;  regInstrucao[7]   ; state.MOV         ; -1.803 ; -1.803 ; Rise       ; state.MOV         ;
;  regInstrucao[8]   ; state.MOV         ; -1.739 ; -1.739 ; Rise       ; state.MOV         ;
;  regInstrucao[9]   ; state.MOV         ; 1.228  ; 1.228  ; Rise       ; state.MOV         ;
;  regInstrucao[10]  ; state.MOV         ; 1.500  ; 1.500  ; Rise       ; state.MOV         ;
; out_comparador[*]  ; state.initial     ; 1.466  ; 1.466  ; Fall       ; state.initial     ;
;  out_comparador[0] ; state.initial     ; 1.466  ; 1.466  ; Fall       ; state.initial     ;
;  out_comparador[1] ; state.initial     ; -1.917 ; -1.917 ; Fall       ; state.initial     ;
; regInstrucao[*]    ; state.initial     ; 1.986  ; 1.986  ; Fall       ; state.initial     ;
;  regInstrucao[2]   ; state.initial     ; -1.952 ; -1.952 ; Fall       ; state.initial     ;
;  regInstrucao[3]   ; state.initial     ; -1.938 ; -1.938 ; Fall       ; state.initial     ;
;  regInstrucao[4]   ; state.initial     ; -1.909 ; -1.909 ; Fall       ; state.initial     ;
;  regInstrucao[5]   ; state.initial     ; 1.725  ; 1.725  ; Fall       ; state.initial     ;
;  regInstrucao[6]   ; state.initial     ; -1.784 ; -1.784 ; Fall       ; state.initial     ;
;  regInstrucao[7]   ; state.initial     ; -1.633 ; -1.633 ; Fall       ; state.initial     ;
;  regInstrucao[8]   ; state.initial     ; -1.904 ; -1.904 ; Fall       ; state.initial     ;
;  regInstrucao[9]   ; state.initial     ; 1.986  ; 1.986  ; Fall       ; state.initial     ;
;  regInstrucao[10]  ; state.initial     ; 1.629  ; 1.629  ; Fall       ; state.initial     ;
+--------------------+-------------------+--------+--------+------------+-------------------+


+---------------------------------------------------------------------------------------+
; Clock to Output Times                                                                 ;
+----------------+-------------------+--------+--------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise   ; Fall   ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+--------+--------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 10.473 ; 10.473 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 10.330 ; 10.330 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 10.481 ; 10.481 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 10.333 ; 10.333 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 10.322 ; 10.322 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 10.362 ; 10.362 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 10.845 ; 10.845 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 10.312 ; 10.312 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 10.465 ; 10.465 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 10.699 ; 10.699 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 10.340 ; 10.340 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 10.319 ; 10.319 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 10.699 ; 10.699 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 8.402  ; 8.402  ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 8.386  ; 8.386  ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 9.212  ; 9.212  ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 9.212  ; 9.212  ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 8.739  ; 8.739  ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 8.881  ; 8.881  ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 8.800  ; 8.800  ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 8.632  ; 8.632  ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 8.628  ; 8.628  ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 8.800  ; 8.800  ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 9.037  ; 9.037  ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 9.021  ; 9.021  ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 9.082  ; 9.082  ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 9.653  ; 9.653  ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 9.653  ; 9.653  ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 9.305  ; 9.305  ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 9.290  ; 9.290  ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 9.030  ; 9.030  ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 9.322  ; 9.322  ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 9.374  ; 9.374  ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 9.065  ; 9.065  ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 9.470  ; 9.470  ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 9.215  ; 9.215  ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 9.888  ; 9.888  ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 9.888  ; 9.888  ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 9.540  ; 9.540  ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 9.525  ; 9.525  ; Rise       ; state.initial     ;
+----------------+-------------------+--------+--------+------------+-------------------+


+-------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                       ;
+----------------+-------------------+-------+-------+------------+-------------------+
; Data Port      ; Clock Port        ; Rise  ; Fall  ; Clock Edge ; Clock Reference   ;
+----------------+-------------------+-------+-------+------------+-------------------+
; ld_R0          ; out_comparador[0] ; 4.420 ; 4.420 ; Fall       ; out_comparador[0] ;
; ld_R1          ; out_comparador[0] ; 4.326 ; 4.326 ; Fall       ; out_comparador[0] ;
; ld_R2          ; out_comparador[0] ; 4.425 ; 4.425 ; Fall       ; out_comparador[0] ;
; ld_R3          ; out_comparador[0] ; 4.336 ; 4.336 ; Fall       ; out_comparador[0] ;
; ld_R4          ; out_comparador[0] ; 4.311 ; 4.311 ; Fall       ; out_comparador[0] ;
; ld_R5          ; out_comparador[0] ; 4.343 ; 4.343 ; Fall       ; out_comparador[0] ;
; ld_R6          ; out_comparador[0] ; 4.547 ; 4.547 ; Fall       ; out_comparador[0] ;
; ld_RE          ; out_comparador[0] ; 4.034 ; 4.034 ; Fall       ; out_comparador[0] ;
; ld_RP          ; out_comparador[0] ; 4.133 ; 4.133 ; Fall       ; out_comparador[0] ;
; sel_mux5_1[*]  ; out_comparador[0] ; 4.333 ; 4.333 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[0] ; out_comparador[0] ; 4.346 ; 4.346 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[1] ; out_comparador[0] ; 4.333 ; 4.333 ; Fall       ; out_comparador[0] ;
;  sel_mux5_1[2] ; out_comparador[0] ; 4.480 ; 4.480 ; Fall       ; out_comparador[0] ;
; ld_RE          ; state.MOV         ; 3.196 ; 3.196 ; Rise       ; state.MOV         ;
; ld_RI          ; state.MOV         ; 3.251 ; 3.251 ; Rise       ; state.MOV         ;
; sel_mux7_1[*]  ; state.MOV         ; 3.713 ; 3.713 ; Rise       ; state.MOV         ;
;  sel_mux7_1[0] ; state.MOV         ; 3.875 ; 3.875 ; Rise       ; state.MOV         ;
;  sel_mux7_1[1] ; state.MOV         ; 3.713 ; 3.713 ; Rise       ; state.MOV         ;
;  sel_mux7_1[2] ; state.MOV         ; 3.744 ; 3.744 ; Rise       ; state.MOV         ;
; sel_mux7_2[*]  ; state.MOV         ; 3.706 ; 3.706 ; Rise       ; state.MOV         ;
;  sel_mux7_2[0] ; state.MOV         ; 3.708 ; 3.708 ; Rise       ; state.MOV         ;
;  sel_mux7_2[1] ; state.MOV         ; 3.706 ; 3.706 ; Rise       ; state.MOV         ;
;  sel_mux7_2[2] ; state.MOV         ; 3.761 ; 3.761 ; Rise       ; state.MOV         ;
; ld_PC          ; state.add         ; 3.517 ; 3.517 ; Fall       ; state.add         ;
; ld_RS          ; state.add         ; 3.483 ; 3.483 ; Fall       ; state.add         ;
; pc_increment   ; state.add         ; 3.518 ; 3.518 ; Fall       ; state.add         ;
; sel_ULA[*]     ; state.add         ; 3.863 ; 3.863 ; Fall       ; state.add         ;
;  sel_ULA[0]    ; state.add         ; 4.011 ; 4.011 ; Fall       ; state.add         ;
;  sel_ULA[1]    ; state.add         ; 3.873 ; 3.873 ; Fall       ; state.add         ;
;  sel_ULA[2]    ; state.add         ; 3.863 ; 3.863 ; Fall       ; state.add         ;
; selmux3        ; state.add         ; 3.476 ; 3.476 ; Fall       ; state.add         ;
; ld_MemDados    ; state.initial     ; 3.768 ; 3.768 ; Rise       ; state.initial     ;
; ld_PC          ; state.initial     ; 3.662 ; 3.662 ; Rise       ; state.initial     ;
; ld_RP          ; state.initial     ; 3.595 ; 3.595 ; Rise       ; state.initial     ;
; ld_RS          ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; pc_increment   ; state.initial     ; 3.639 ; 3.639 ; Rise       ; state.initial     ;
; sel_ULA[*]     ; state.initial     ; 3.963 ; 3.963 ; Rise       ; state.initial     ;
;  sel_ULA[0]    ; state.initial     ; 4.111 ; 4.111 ; Rise       ; state.initial     ;
;  sel_ULA[1]    ; state.initial     ; 3.973 ; 3.973 ; Rise       ; state.initial     ;
;  sel_ULA[2]    ; state.initial     ; 3.963 ; 3.963 ; Rise       ; state.initial     ;
+----------------+-------------------+-------+-------+------------+-------------------+


+-----------------------------------------------------------------------------------+
; Setup Transfers                                                                   ;
+-------------------+-------------------+----------+----------+----------+----------+
; From Clock        ; To Clock          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------+-------------------+----------+----------+----------+----------+
; clk               ; clk               ; 23       ; 0        ; 0        ; 0        ;
; state.initial     ; clk               ; 2        ; 2        ; 0        ; 0        ;
; clk               ; out_comparador[0] ; 0        ; 0        ; 219      ; 0        ;
; out_comparador[0] ; out_comparador[0] ; 0        ; 0        ; 20       ; 27       ;
; state.add         ; out_comparador[0] ; 0        ; 0        ; 3        ; 3        ;
; state.initial     ; out_comparador[0] ; 0        ; 0        ; 23       ; 30       ;
; state.MOV         ; out_comparador[0] ; 0        ; 0        ; 14       ; 14       ;
; clk               ; state.add         ; 0        ; 0        ; 11       ; 0        ;
; state.add         ; state.add         ; 0        ; 0        ; 1        ; 1        ;
; clk               ; state.initial     ; 11       ; 0        ; 188      ; 0        ;
; out_comparador[0] ; state.initial     ; 0        ; 0        ; 20       ; 20       ;
; state.initial     ; state.initial     ; 1        ; 1        ; 14       ; 14       ;
; state.MOV         ; state.initial     ; 0        ; 0        ; 14       ; 14       ;
; clk               ; state.MOV         ; 72       ; 0        ; 0        ; 0        ;
; state.add         ; state.MOV         ; 7        ; 7        ; 0        ; 0        ;
; state.initial     ; state.MOV         ; 1        ; 1        ; 0        ; 0        ;
+-------------------+-------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-----------------------------------------------------------------------------------+
; Hold Transfers                                                                    ;
+-------------------+-------------------+----------+----------+----------+----------+
; From Clock        ; To Clock          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-------------------+-------------------+----------+----------+----------+----------+
; clk               ; clk               ; 23       ; 0        ; 0        ; 0        ;
; state.initial     ; clk               ; 2        ; 2        ; 0        ; 0        ;
; clk               ; out_comparador[0] ; 0        ; 0        ; 219      ; 0        ;
; out_comparador[0] ; out_comparador[0] ; 0        ; 0        ; 20       ; 27       ;
; state.add         ; out_comparador[0] ; 0        ; 0        ; 3        ; 3        ;
; state.initial     ; out_comparador[0] ; 0        ; 0        ; 23       ; 30       ;
; state.MOV         ; out_comparador[0] ; 0        ; 0        ; 14       ; 14       ;
; clk               ; state.add         ; 0        ; 0        ; 11       ; 0        ;
; state.add         ; state.add         ; 0        ; 0        ; 1        ; 1        ;
; clk               ; state.initial     ; 11       ; 0        ; 188      ; 0        ;
; out_comparador[0] ; state.initial     ; 0        ; 0        ; 20       ; 20       ;
; state.initial     ; state.initial     ; 1        ; 1        ; 14       ; 14       ;
; state.MOV         ; state.initial     ; 0        ; 0        ; 14       ; 14       ;
; clk               ; state.MOV         ; 72       ; 0        ; 0        ; 0        ;
; state.add         ; state.MOV         ; 7        ; 7        ; 0        ; 0        ;
; state.initial     ; state.MOV         ; 1        ; 1        ; 0        ; 0        ;
+-------------------+-------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 16    ; 16   ;
; Unconstrained Input Port Paths  ; 201   ; 201  ;
; Unconstrained Output Ports      ; 27    ; 27   ;
; Unconstrained Output Port Paths ; 27    ; 27   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Fri May 07 13:00:56 2021
Info: Command: quartus_sta controlador -c controlador
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is -40 degrees C
Info (21077): High junction temperature is 125 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 34 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'controlador.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name out_comparador[0] out_comparador[0]
    Info (332105): create_clock -period 1.000 -name state.add state.add
    Info (332105): create_clock -period 1.000 -name state.MOV state.MOV
    Info (332105): create_clock -period 1.000 -name state.initial state.initial
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Selector14~0  from: datad  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.993
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.993       -30.969 out_comparador[0] 
    Info (332119):    -3.407       -20.596 state.initial 
    Info (332119):    -2.277       -16.559 state.MOV 
    Info (332119):    -1.318       -18.875 clk 
    Info (332119):    -0.455        -1.093 state.add 
Info (332146): Worst-case hold slack is -5.564
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -5.564       -45.926 out_comparador[0] 
    Info (332119):    -4.164       -26.982 state.initial 
    Info (332119):    -3.430        -5.545 state.add 
    Info (332119):    -1.673        -8.284 state.MOV 
    Info (332119):    -1.529        -1.529 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -27.293 clk 
    Info (332119):    -1.469        -1.469 out_comparador[0] 
    Info (332119):     0.500         0.000 state.MOV 
    Info (332119):     0.500         0.000 state.add 
    Info (332119):     0.500         0.000 state.initial 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Selector14~0  from: datad  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.892
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.892        -5.139 out_comparador[0] 
    Info (332119):    -0.870        -4.917 state.initial 
    Info (332119):    -0.406        -0.977 state.MOV 
    Info (332119):    -0.114        -0.201 state.add 
    Info (332119):     0.152         0.000 clk 
Info (332146): Worst-case hold slack is -2.042
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.042       -21.977 out_comparador[0] 
    Info (332119):    -1.504        -9.823 state.initial 
    Info (332119):    -1.201        -1.201 state.add 
    Info (332119):    -0.842        -0.842 clk 
    Info (332119):    -0.773        -4.850 state.MOV 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -22.380 clk 
    Info (332119):    -1.222        -1.222 out_comparador[0] 
    Info (332119):     0.500         0.000 state.MOV 
    Info (332119):     0.500         0.000 state.add 
    Info (332119):     0.500         0.000 state.initial 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4539 megabytes
    Info: Processing ended: Fri May 07 13:00:58 2021
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


